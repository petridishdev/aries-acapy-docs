"use strict";(self.webpackChunkaries_cloud_agent_python_documentation=self.webpackChunkaries_cloud_agent_python_documentation||[]).push([[7821],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=d(n),y=r,g=p["".concat(s,".").concat(y)]||p[y]||m[y]||i;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=y;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},4302:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const i={},l="Container Images and Github Actions",o={unversionedId:"docs/ContainerImagesAndGithubActions",id:"docs/ContainerImagesAndGithubActions",title:"Container Images and Github Actions",description:"Aries Cloud Agent - Python is most frequently deployed using containers. From",source:"@site/docs/docs/ContainerImagesAndGithubActions.md",sourceDirName:"docs",slug:"/docs/ContainerImagesAndGithubActions",permalink:"/aries-acapy-docs/docs/ContainerImagesAndGithubActions",draft:!1,editUrl:"https://github.com/hyperledger/aries-acapy-docs/tree/main/docs/docusaurus/docs/docs/ContainerImagesAndGithubActions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Anoncreds Proof Validation in Aca-Py",permalink:"/aries-acapy-docs/docs/AnoncredsProofValidation"},next:{title:"DID methods in ACA-Py",permalink:"/aries-acapy-docs/docs/DIDMethods"}},s={},d=[{value:"Image",id:"image",level:2},{value:"Tags",id:"tags",level:3},{value:"Image Comparison",id:"image-comparison",level:3},{value:"Github Actions",id:"github-actions",level:2}],u={toc:d},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"container-images-and-github-actions"},"Container Images and Github Actions"),(0,r.kt)("p",null,"Aries Cloud Agent - Python is most frequently deployed using containers. From\nthe first release of ACA-Py up through 0.7.4, much of the community has built\ntheir Aries stack using the container images graciously provided by BC Gov and\nhosted through their ",(0,r.kt)("inlineCode",{parentName:"p"},"bcgovimages")," docker hub account. These images have been\ncritical to the adoption of not only ACA-Py but also Hyperledger Aries and SSI\nmore generally."),(0,r.kt)("p",null,"Recognizing how critical these images are to the success of ACA-Py and\nconsistent with Hyperledger's commitment to open collaboration, container images\nare now built and published directly from the Aries Cloud Agent - Python project\nrepository and made available through the ",(0,r.kt)("a",{parentName:"p",href:"https://ghcr.io"},"Github Packages Container\nRegistry"),"."),(0,r.kt)("h2",{id:"image"},"Image"),(0,r.kt)("p",null,"This project builds and publishes the ",(0,r.kt)("inlineCode",{parentName:"p"},"ghcr.io/hyperledger/aries-cloudagent-python")," image.\nMultiple variants are available; see ",(0,r.kt)("a",{parentName:"p",href:"#tags"},"Tags"),"."),(0,r.kt)("h3",{id:"tags"},"Tags"),(0,r.kt)("p",null,"ACA-Py is a foundation for building decentralized identity applications; to this\nend, there are multiple variants of ACA-Py built to suit the needs of a variety\nof environments and workflows. There are currently two main variants:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'"Standard" - The default configuration of ACA-Py, including:',(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Aries Askar for secure storage"),(0,r.kt)("li",{parentName:"ul"},"Indy VDR for Indy ledger communication"),(0,r.kt)("li",{parentName:"ul"},"Indy Shared Libraries for AnonCreds"))),(0,r.kt)("li",{parentName:"ul"},'"Indy" - The legacy configuration of ACA-Py, including:',(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Indy SDK Wallet for secure storage"),(0,r.kt)("li",{parentName:"ul"},"Indy SDK Ledger for Indy ledger communication"),(0,r.kt)("li",{parentName:"ul"},"Indy SDK for AnonCreds")))),(0,r.kt)("p",null,"These two image variants are largely distinguished by providers for Indy Network\nand AnonCreds support. The Standard variant is recommended for new projects.\nMigration from an Indy based image (whether the new Indy image variant or the\noriginal BC Gov images) to the Standard image is outside of the scope of this\ndocument."),(0,r.kt)("p",null,"The ACA-Py images built by this project are tagged to indicate which of the\nabove variants it is. Other tags may also be generated for use by developers."),(0,r.kt)("p",null,"Below is a table of all generated images and their tags:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Tag"),(0,r.kt)("th",{parentName:"tr",align:null},"Variant"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"py3.6-X.Y.Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard"),(0,r.kt)("td",{parentName:"tr",align:null},"py3.6-0.7.4"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard image variant built on Python 3.6 for ACA-Py version X.Y.Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"py3.7-X.Y.Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard"),(0,r.kt)("td",{parentName:"tr",align:null},"py3.7-0.7.4"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard image variant built on Python 3.7 for ACA-Py version X.Y.Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"py3.8-X.Y.Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard"),(0,r.kt)("td",{parentName:"tr",align:null},"py3.8-0.7.4"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard image variant built on Python 3.8 for ACA-Py version X.Y.Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"py3.9-X.Y.Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard"),(0,r.kt)("td",{parentName:"tr",align:null},"py3.9-0.7.4"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard image variant built on Python 3.9 for ACA-Py version X.Y.Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"py3.10-X.Y.Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard"),(0,r.kt)("td",{parentName:"tr",align:null},"py3.10-0.7.4"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard image variant built on Python 3.10 for ACA-Py version X.Y.Z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"py3.7-indy-A.B.C-X.Y.Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Indy"),(0,r.kt)("td",{parentName:"tr",align:null},"py3.7-indy-1.16.0-0.7.4"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard image variant built on Python 3.7 for ACA-Py version X.Y.Z and Indy SDK Version A.B.C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"py3.8-indy-A.B.C-X.Y.Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Indy"),(0,r.kt)("td",{parentName:"tr",align:null},"py3.8-indy-1.16.0-0.7.4"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard image variant built on Python 3.8 for ACA-Py version X.Y.Z and Indy SDK Version A.B.C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"py3.9-indy-A.B.C-X.Y.Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Indy"),(0,r.kt)("td",{parentName:"tr",align:null},"py3.9-indy-1.16.0-0.7.4"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard image variant built on Python 3.9 for ACA-Py version X.Y.Z and Indy SDK Version A.B.C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"py3.10-indy-A.B.C-X.Y.Z"),(0,r.kt)("td",{parentName:"tr",align:null},"Indy"),(0,r.kt)("td",{parentName:"tr",align:null},"py3.10-indy-1.16.0-0.7.4"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard image variant built on Python 3.10 for ACA-Py version X.Y.Z and Indy SDK Version A.B.C")))),(0,r.kt)("h3",{id:"image-comparison"},"Image Comparison"),(0,r.kt)("p",null,"There are several key differences that should be noted between the two image\nvariants and between the BC Gov ACA-Py images."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Standard Image",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Based on slim variant of Debian"),(0,r.kt)("li",{parentName:"ul"},"Does ",(0,r.kt)("strong",{parentName:"li"},"NOT")," include ",(0,r.kt)("inlineCode",{parentName:"li"},"libindy")),(0,r.kt)("li",{parentName:"ul"},"Default user is ",(0,r.kt)("inlineCode",{parentName:"li"},"aries")),(0,r.kt)("li",{parentName:"ul"},"Uses container's system python environment rather than ",(0,r.kt)("inlineCode",{parentName:"li"},"pyenv")),(0,r.kt)("li",{parentName:"ul"},"Askar and Indy Shared libraries are installed as dependencies of ACA-Py through pip from pre-compiled binaries included in the python wrappers"),(0,r.kt)("li",{parentName:"ul"},"Built from repo contents"))),(0,r.kt)("li",{parentName:"ul"},"Indy Image",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Based on slim variant of Debian"),(0,r.kt)("li",{parentName:"ul"},"Built from multi-stage build step (",(0,r.kt)("inlineCode",{parentName:"li"},"indy-base")," in the Dockerfile) which includes Indy dependencies; this could be replaced with an explicit ",(0,r.kt)("inlineCode",{parentName:"li"},"indy-python")," image from the Indy SDK repo"),(0,r.kt)("li",{parentName:"ul"},"Includes ",(0,r.kt)("inlineCode",{parentName:"li"},"libindy")," but does ",(0,r.kt)("strong",{parentName:"li"},"NOT")," include the Indy CLI"),(0,r.kt)("li",{parentName:"ul"},"Default user is ",(0,r.kt)("inlineCode",{parentName:"li"},"indy")),(0,r.kt)("li",{parentName:"ul"},"Uses container's system python environment rather than ",(0,r.kt)("inlineCode",{parentName:"li"},"pyenv")),(0,r.kt)("li",{parentName:"ul"},"Askar and Indy Shared libraries are installed as dependencies of ACA-Py through pip from pre-compiled binaries included in the python wrappers"),(0,r.kt)("li",{parentName:"ul"},"Built from repo contents"),(0,r.kt)("li",{parentName:"ul"},"Includes Indy postgres storage plugin"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bcgovimages/aries-cloudagent"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"(Usually) based on Ubuntu"),(0,r.kt)("li",{parentName:"ul"},"Based on ",(0,r.kt)("inlineCode",{parentName:"li"},"von-image")),(0,r.kt)("li",{parentName:"ul"},"Default user is ",(0,r.kt)("inlineCode",{parentName:"li"},"indy")),(0,r.kt)("li",{parentName:"ul"},"Includes ",(0,r.kt)("inlineCode",{parentName:"li"},"libindy")," and Indy CLI"),(0,r.kt)("li",{parentName:"ul"},"Uses ",(0,r.kt)("inlineCode",{parentName:"li"},"pyenv")),(0,r.kt)("li",{parentName:"ul"},"Askar and Indy Shared libraries built from source"),(0,r.kt)("li",{parentName:"ul"},"Built from ACA-Py python package uploaded to PyPI"),(0,r.kt)("li",{parentName:"ul"},"Includes Indy postgres storage plugin")))),(0,r.kt)("h2",{id:"github-actions"},"Github Actions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tests (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/tests.yml"),") - A reusable workflow that runs tests\nfor the Standard ACA-Py variant for a given python version."),(0,r.kt)("li",{parentName:"ul"},"Tests (Indy) (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/tests-indy.yml"),") - A reusable workflow that\nruns tests for the Indy ACA-Py variant for a given python and indy version."),(0,r.kt)("li",{parentName:"ul"},"PR Tests (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/pr-tests.yml"),') - Run on pull requests; runs tests\nfor the Standard and Indy ACA-Py variants for a "default" python version.\nCheck this workflow for the current default python and Indy versions in use.'),(0,r.kt)("li",{parentName:"ul"},"Nightly Tests (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/nightly-tests.yml"),") - Run nightly; runs\ntests for the Standard and Indy ACA-Py variants for all currently supported\npython versions. Check this workflow for the set of currently supported\nversions and Indy version(s) in use."),(0,r.kt)("li",{parentName:"ul"},"Publish (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/publish.yml"),") - Run on new release published or\nwhen manually triggered; builds and pushes the Standard ACA-Py variant to the\nGithub Container Registry."),(0,r.kt)("li",{parentName:"ul"},"Publish (Indy) (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/publish-indy.yml"),") - Run on new release\npublished or when manually triggered; builds and pushes the Indy ACA-Py\nvariant to the Github Container Registry."),(0,r.kt)("li",{parentName:"ul"},"Integration Tests (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/integrationtests.yml"),") - Run on pull\nrequests (to the hyperledger fork only); runs BDD integration tests."),(0,r.kt)("li",{parentName:"ul"},"Black Format (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/blackformat.yml"),") - Run on pull requests;\nchecks formatting of files modified by the PR."),(0,r.kt)("li",{parentName:"ul"},"CodeQL (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/codeql.yml"),") - Run on pull requests; performs\nCodeQL analysis."),(0,r.kt)("li",{parentName:"ul"},"Python Publish (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/pythonpublish.yml"),") - Run on release\ncreated; publishes ACA-Py python package to PyPI."),(0,r.kt)("li",{parentName:"ul"},"PIP Audit (",(0,r.kt)("inlineCode",{parentName:"li"},".github/workflows/pipaudit.yml"),") - Run when manually triggered;\nperforms pip audit.")))}m.isMDXComponent=!0}}]);