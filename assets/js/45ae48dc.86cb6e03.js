"use strict";(self.webpackChunkaries_cloud_agent_python_documentation=self.webpackChunkaries_cloud_agent_python_documentation||[]).push([[6591],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(n),p=r,g=c["".concat(s,".").concat(p)]||c[p]||h[p]||o;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},230:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const o={title:"Troubleshooting Aries Cloud Agent Python"},i="Troubleshooting Aries Cloud Agent Python \x3c!-- omit in toc --\x3e",l={unversionedId:"docs/Troubleshooting",id:"docs/Troubleshooting",title:"Troubleshooting Aries Cloud Agent Python",description:"This document contains some troubleshooting information that contributors to the",source:"@site/docs/docs/Troubleshooting.md",sourceDirName:"docs",slug:"/docs/Troubleshooting",permalink:"/aries-acapy-docs/docs/Troubleshooting",draft:!1,editUrl:"https://github.com/hyperledger/aries-acapy-docs/tree/main/docs/docusaurus/docs/docs/Troubleshooting.md",tags:[],version:"current",frontMatter:{title:"Troubleshooting Aries Cloud Agent Python"},sidebar:"tutorialSidebar",previous:{title:"Aries AIP and RFCs Supported in Aries Cloud Agent Python",permalink:"/aries-acapy-docs/docs/SupportedRFCs"},next:{title:"Aries Cloud Agent-Python (ACA-Py) - OpenAPI Code Generation Considerations",permalink:"/aries-acapy-docs/docs/UsingOpenAPI"}},s={},u=[{value:"Table of Contents  omit in toc ",id:"table-of-contents--omit-in-toc-",level:2},{value:"Unable to Connect to Ledger",id:"unable-to-connect-to-ledger",level:2},{value:"Local ledger running?",id:"local-ledger-running",level:3},{value:"Any Firewalls",id:"any-firewalls",level:3},{value:"Damaged, Unpublishable Revocation Registry",id:"damaged-unpublishable-revocation-registry",level:2}],d={toc:u},c="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"troubleshooting-aries-cloud-agent-python--omit-in-toc-"},"Troubleshooting Aries Cloud Agent Python "),(0,r.kt)("p",null,"This document contains some troubleshooting information that contributors to the\ncommunity think may be helpful. Most of the content here assumes the reader has\ngotten started with ACA-Py and has arrived here because of an issue that came up\nin their use of ACA-Py."),(0,r.kt)("p",null,"Contributions (via pull request) to this document are welcome. Topics added here\nwill mostly come from reported issues that contributors think would be helpful\nto the larger community."),(0,r.kt)("h2",{id:"table-of-contents--omit-in-toc-"},"Table of Contents "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#unable-to-connect-to-ledger"},"Unable to Connect to Ledger"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#local-ledger-running"},"Local ledger running?")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#any-firewalls"},"Any Firewalls")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#damaged-unpublishable-revocation-registry"},"Damaged, Unpublishable Revocation Registry"))),(0,r.kt)("h2",{id:"unable-to-connect-to-ledger"},"Unable to Connect to Ledger"),(0,r.kt)("p",null,'The most common issue hit by first time users is getting an error on startup "unable to connect to ledger". Here are a list of things to check when you see that error.'),(0,r.kt)("h3",{id:"local-ledger-running"},"Local ledger running?"),(0,r.kt)("p",null,"Unless you specify via startup parameters or environment variables that you are using a public Hyperledger Indy ledger, ACA-Py assumes that you are running a local ledger -- an instance of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bcgov/von-network"},"von-network"),".\nIf that is the cause -- have you started your local ledger, and did it startup properly. Things to check:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Any errors in the startup of von-network?"),(0,r.kt)("li",{parentName:"ul"},"Is the von-network webserver (usually at ",(0,r.kt)("inlineCode",{parentName:"li"},"https:/localhost:9000"),") accessible? If so, can you click on and see the Genesis File?"),(0,r.kt)("li",{parentName:"ul"},"Do you even need a local ledger? If not, you can use a public sandbox ledger,\nsuch as the ",(0,r.kt)("a",{parentName:"li",href:"http://dev.greenlight.bcovrin.vonx.io"},"Dev Greenlight ledger"),", likely by just prefacing your ACA-Py\ncommand with ",(0,r.kt)("inlineCode",{parentName:"li"},"LEDGER_URL=http://dev.greenlight.bcovrin.vonx.io"),". For example,\nwhen running the Alice-Faber demo in the ",(0,r.kt)("a",{parentName:"li",href:"demo"},"demo")," folder, you can run (for\nexample), the Faber agent using the command:\n",(0,r.kt)("inlineCode",{parentName:"li"},"LEDGER_URL=http://dev.greenlight.bcovrin.vonx.io ./run_demo faber"))),(0,r.kt)("h3",{id:"any-firewalls"},"Any Firewalls"),(0,r.kt)("p",null,"Do you have any firewalls in play that might be blocking the ports that are used by the ledger, notably 9701-9708? To access a ledger\nthe ACA-Py instance must be able to get to those ports of the ledger, regardless if the ledger is local or remote."),(0,r.kt)("h2",{id:"damaged-unpublishable-revocation-registry"},"Damaged, Unpublishable Revocation Registry"),(0,r.kt)("p",null,"We have discovered that in the ACA-Py AnonCreds implementation, it is possible\nto get into a state where the publishing of updates to a Revocation Registry\n(RevReg) is impossible. This can happen where ACA-Py starts to publish an update\nto the RevReg, but the write transaction to the Hyperledger Indy ledger fails\nfor some reason. When a credential revocation is published, aca-py (via indy-sdk\nor askar/credx) updates the revocation state in the wallet as well as on the\nledger. The revocation state is dependant on whatever the previous revocation\nstate is/was, so if the ledger and wallet are mis-matched the publish will fail.\n(Andrew/s PR # 1804 (merged) should mitigate but probably won't completely\neliminate this from happening)."),(0,r.kt)("p",null,"For example, in case we've seen, the write RevRegEntry transaction failed at the\nledger because there was a problem with accepting the TAA (Transaction Author\nAgreement). Once the error occurred, the RevReg state held by the ACA-Py agent,\nand the RevReg state on the ledger were different. Even after the ability to\nwrite to the ledger was restored, the RevReg could still not be published\nbecause of the differences in the RevReg state. Such a situation can now be\ncorrected, as follows:"),(0,r.kt)("p",null,"To address this issue, some new endpoints were added to ACA-Py in Release 0.7.4,\nas follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"GET ",(0,r.kt)("inlineCode",{parentName:"li"},"/revocation/registry/<id>/issued")," - counts of the number of issued/revoked\nwithin a registry"),(0,r.kt)("li",{parentName:"ul"},"GET ",(0,r.kt)("inlineCode",{parentName:"li"},"/revocation/registry/<id>/issued/details")," - details of all credentials\nissued/revoked within a registry"),(0,r.kt)("li",{parentName:"ul"},"GET ",(0,r.kt)("inlineCode",{parentName:"li"},"/revocation/registry/<id>/issued/indy_recs")," - calculated rev_reg_delta from\nthe ledger",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This is used to compare ledger revoked vs wallet revoked credentials, which\nis essentially the state of the RevReg on the ledger and in ACA-Py. Where\nthere is a difference, we have an error."))),(0,r.kt)("li",{parentName:"ul"},"PUT ",(0,r.kt)("inlineCode",{parentName:"li"},"/revocation/registry/<id>/fix-revocation-entry-state")," - publish an update\nto the RevReg state on the ledger to bring it into alignment with what is in\nthe ACA-Py instance.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"There is a boolean parameter (",(0,r.kt)("inlineCode",{parentName:"li"},"apply_ledger_update"),") to control whether the\nledger entry actually gets published so, if you are so inclined, you can\ncall the endpoint to see what the transaction would be, before you actually\ntry to do a ledger update. This will return:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rev_reg_delta"),' - same as the ".../indy_recs" endpoint'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"accum_calculated")," - transaction to write to ledger"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"accum_fixed")," - If ",(0,r.kt)("inlineCode",{parentName:"li"},"apply_ledger_update"),", the transaction actually written\nto the ledger")))))),(0,r.kt)("p",null,"Note that there is (currently) a backlog item to prevent the wallet and ledger\nfrom getting out of sync (e.g. don't update the ACA-Py RevReg state if the\nledger write fails), but even after that change is made, having this ability\nwill be retained for use if needed."),(0,r.kt)("p",null,"We originally ran into this due to the TAA acceptance getting lost when\nswitching to multi-ledger (as described\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hyperledger/aries-cloudagent-python/blob/main/Multiledger.md#a-special-warning-for-taa-acceptance"},"here"),'.\nNote that this is one reason how this "out of sync" scenario can occur, but\nthere may be others.'),(0,r.kt)("p",null,"We add an integration test that demonstrates/tests this issue ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hyperledger/aries-cloudagent-python/blob/main/demo/features/taa-txn-author-acceptance.feature#L67"},"here"),"."),(0,r.kt)("p",null,"To run the scenario either manually or using the integration tests, you can do the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Start von-network in TAA mode:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./manage start --taa-sample --logs")))),(0,r.kt)("li",{parentName:"ul"},"Start the tails server as usual:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./manage start --logs")))),(0,r.kt)("li",{parentName:"ul"},"To run the scenario manually, start faber and let the agent know it needs to TAA-accept before doing any ledger writes:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./run_demo faber --revocation --taa-accept"),", and then you can run through all the transactions using the Swagger page."))),(0,r.kt)("li",{parentName:"ul"},"To run the scenario via an integration test, run:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"./run_bdd -t @taa_required"))))))}h.isMDXComponent=!0}}]);