"use strict";(self.webpackChunkaries_cloud_agent_python_documentation=self.webpackChunkaries_cloud_agent_python_documentation||[]).push([[3132],{3905:(e,t,a)=>{a.d(t,{Zo:()=>y,kt:()=>m});var r=a(7294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,s=function(e,t){if(null==e)return{};var a,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},y=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,y=i(e,["components","mdxType","originalType","parentName"]),c=p(a),h=s,m=c["".concat(l,".").concat(h)]||c[h]||d[h]||o;return a?r.createElement(m,n(n({ref:t},y),{},{components:a})):r.createElement(m,n({ref:t},y))}));function m(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=a.length,n=new Array(o);n[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:s,n[1]=i;for(var p=2;p<o;p++)n[p]=a[p];return r.createElement.apply(null,n)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},2639:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=a(7462),s=(a(7294),a(3905));const o={},n="aries_cloudagent.vc.ld_proofs.crypto package",i={unversionedId:"code/generated/aries_cloudagent.vc.ld_proofs.crypto",id:"code/generated/aries_cloudagent.vc.ld_proofs.crypto",title:"aries_cloudagent.vc.ld_proofs.crypto package",description:"Submodules",source:"@site/docs/code/generated/aries_cloudagent.vc.ld_proofs.crypto.md",sourceDirName:"code/generated",slug:"/code/generated/aries_cloudagent.vc.ld_proofs.crypto",permalink:"/aries-acapy-docs/code/generated/aries_cloudagent.vc.ld_proofs.crypto",draft:!1,editUrl:"https://github.com/hyperledger/aries-acapy-docs/tree/main/docs/docusaurus/docs/code/generated/aries_cloudagent.vc.ld_proofs.crypto.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"aries_cloudagent.utils package",permalink:"/aries-acapy-docs/code/generated/aries_cloudagent.utils"},next:{title:"aries_cloudagent.vc.ld_proofs package",permalink:"/aries-acapy-docs/code/generated/aries_cloudagent.vc.ld_proofs"}},l={},p=[{value:"Submodules",id:"submodules",level:2},{value:"aries_cloudagent.vc.ld_proofs.crypto.key_pair module",id:"aries_cloudagentvcld_proofscryptokey_pair-module",level:2},{value:"<em>class</em> aries_cloudagent.vc.ld_proofs.crypto.key_pair.KeyPair()",id:"class-aries_cloudagentvcld_proofscryptokey_pairkeypair",level:3},{value:"<em>abstract</em> from_verification_method(verification_method: dict)",id:"abstract-from_verification_methodverification_method-dict",level:4},{value:"<em>abstract property</em> has<em>public_key(</em>: bool",id:"abstract-property-haspublic_key-bool",level:4},{value:"<em>abstract property</em> public<em>key(</em>: Optional[bytes_ )",id:"abstract-property-publickey-optionalbytes_-",level:4},{value:"<em>abstract async</em> sign(message: Union[List[bytes], bytes])",id:"abstract-async-signmessage-unionlistbytes-bytes",level:4},{value:"<em>abstract async</em> verify(message: Union[List[bytes], bytes], signature: bytes)",id:"abstract-async-verifymessage-unionlistbytes-bytes-signature-bytes",level:4},{value:"aries_cloudagent.vc.ld_proofs.crypto.wallet_key_pair module",id:"aries_cloudagentvcld_proofscryptowallet_key_pair-module",level:2},{value:"<em>class</em> aries_cloudagent.vc.ld_proofs.crypto.wallet_key_pair.WalletKeyPair(*, wallet: BaseWallet, key_type: KeyType, public_key_base58: Optional[str] = None)",id:"class-aries_cloudagentvcld_proofscryptowallet_key_pairwalletkeypair-wallet-basewallet-key_type-keytype-public_key_base58-optionalstr--none",level:3},{value:"from_verification_method(verification_method: dict)",id:"from_verification_methodverification_method-dict",level:4},{value:"<em>property</em> has<em>public_key(</em>: bool",id:"property-haspublic_key-bool",level:4},{value:"<em>property</em> public<em>key(</em>: Optional[bytes_ )",id:"property-publickey-optionalbytes_-",level:4},{value:"<em>async</em> sign(message: Union[List[bytes], bytes])",id:"async-signmessage-unionlistbytes-bytes",level:4},{value:"<em>async</em> verify(message: Union[List[bytes], bytes], signature: bytes)",id:"async-verifymessage-unionlistbytes-bytes-signature-bytes",level:4}],y={toc:p},c="wrapper";function d(e){let{components:t,...a}=e;return(0,s.kt)(c,(0,r.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"aries_cloudagentvcld_proofscrypto-package"},"aries_cloudagent.vc.ld_proofs.crypto package"),(0,s.kt)("h2",{id:"submodules"},"Submodules"),(0,s.kt)("h2",{id:"aries_cloudagentvcld_proofscryptokey_pair-module"},"aries_cloudagent.vc.ld_proofs.crypto.key_pair module"),(0,s.kt)("p",null,"Base key pair class."),(0,s.kt)("h3",{id:"class-aries_cloudagentvcld_proofscryptokey_pairkeypair"},(0,s.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.vc.ld_proofs.crypto.key_pair.KeyPair()"),(0,s.kt)("p",null,"Bases: ",(0,s.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/abc.html#abc.ABC"},(0,s.kt)("inlineCode",{parentName:"a"},"ABC"))),(0,s.kt)("p",null,"Base key pair class."),(0,s.kt)("h4",{id:"abstract-from_verification_methodverification_method-dict"},(0,s.kt)("em",{parentName:"h4"},"abstract")," from_verification_method(verification_method: ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),")"),(0,s.kt)("p",null,"Create new key pair class based on the passed verification method."),(0,s.kt)("h4",{id:"abstract-property-haspublic_key-bool"},(0,s.kt)("em",{parentName:"h4"},"abstract property")," has",(0,s.kt)("em",{parentName:"h4"},"public_key("),": ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool_"},"bool")),(0,s.kt)("p",null,"Whether key pair has a public key."),(0,s.kt)("p",null,"Public key is required for verification, but can be set dynamically\nin the verification process."),(0,s.kt)("h4",{id:"abstract-property-publickey-optionalbytes_-"},(0,s.kt)("em",{parentName:"h4"},"abstract property")," public",(0,s.kt)("em",{parentName:"h4"},"key("),": ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"_ )"),(0,s.kt)("p",null,"Getter for the public key bytes."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Returns")),(0,s.kt)("p",{parentName:"li"},"  The public key"))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"Return type")),(0,s.kt)("p",{parentName:"li"},"  ",(0,s.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes")))),(0,s.kt)("h4",{id:"abstract-async-signmessage-unionlistbytes-bytes"},(0,s.kt)("em",{parentName:"h4"},"abstract async")," sign(message: ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Union"},"Union"),"[",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"])"),(0,s.kt)("p",null,"Sign message(s) using key pair."),(0,s.kt)("h4",{id:"abstract-async-verifymessage-unionlistbytes-bytes-signature-bytes"},(0,s.kt)("em",{parentName:"h4"},"abstract async")," verify(message: ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Union"},"Union"),"[",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], signature: ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),")"),(0,s.kt)("p",null,"Verify message(s) against signature using key pair."),(0,s.kt)("h2",{id:"aries_cloudagentvcld_proofscryptowallet_key_pair-module"},"aries_cloudagent.vc.ld_proofs.crypto.wallet_key_pair module"),(0,s.kt)("p",null,"Key pair based on base wallet interface."),(0,s.kt)("h3",{id:"class-aries_cloudagentvcld_proofscryptowallet_key_pairwalletkeypair-wallet-basewallet-key_type-keytype-public_key_base58-optionalstr--none"},(0,s.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.vc.ld_proofs.crypto.wallet_key_pair.WalletKeyPair(","*",", wallet: ",(0,s.kt)("a",{parentName:"h3",href:"/aries-acapy-docs/code/generated/aries_cloudagent.wallet#aries_cloudagent.wallet.base.BaseWallet"},"BaseWallet"),", key_type: ",(0,s.kt)("a",{parentName:"h3",href:"/aries-acapy-docs/code/generated/aries_cloudagent.wallet#aries_cloudagent.wallet.key_type.KeyType"},"KeyType"),", public_key_base58: ",(0,s.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,s.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,s.kt)("p",null,"Bases: ",(0,s.kt)("inlineCode",{parentName:"p"},"KeyPair")),(0,s.kt)("p",null,"Base wallet key pair."),(0,s.kt)("h4",{id:"from_verification_methodverification_method-dict"},"from_verification_method(verification_method: ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),")"),(0,s.kt)("p",null,"Create new WalletKeyPair from public key in verification method."),(0,s.kt)("h4",{id:"property-haspublic_key-bool"},(0,s.kt)("em",{parentName:"h4"},"property")," has",(0,s.kt)("em",{parentName:"h4"},"public_key("),": ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool_"},"bool")),(0,s.kt)("p",null,"Whether key pair has public key."),(0,s.kt)("h4",{id:"property-publickey-optionalbytes_-"},(0,s.kt)("em",{parentName:"h4"},"property")," public",(0,s.kt)("em",{parentName:"h4"},"key("),": ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"_ )"),(0,s.kt)("p",null,"Getter for public key."),(0,s.kt)("h4",{id:"async-signmessage-unionlistbytes-bytes"},(0,s.kt)("em",{parentName:"h4"},"async")," sign(message: ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Union"},"Union"),"[",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"])"),(0,s.kt)("p",null,"Sign message using wallet."),(0,s.kt)("h4",{id:"async-verifymessage-unionlistbytes-bytes-signature-bytes"},(0,s.kt)("em",{parentName:"h4"},"async")," verify(message: ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Union"},"Union"),"[",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], signature: ",(0,s.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),")"),(0,s.kt)("p",null,"Verify message against signature using wallet."))}d.isMDXComponent=!0}}]);