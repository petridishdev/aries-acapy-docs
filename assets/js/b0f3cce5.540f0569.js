"use strict";(self.webpackChunkaries_cloud_agent_python_documentation=self.webpackChunkaries_cloud_agent_python_documentation||[]).push([[3067],{3905:(e,t,i)=>{i.d(t,{Zo:()=>m,kt:()=>k});var a=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function d(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var l=a.createContext({}),s=function(e){var t=a.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},m=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),p=s(i),c=n,k=p["".concat(l,".").concat(c)]||p[c]||u[c]||r;return i?a.createElement(k,o(o({ref:t},m),{},{components:i})):a.createElement(k,o({ref:t},m))}));function k(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=i.length,o=new Array(r);o[0]=c;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[p]="string"==typeof e?e:n,o[1]=d;for(var s=2;s<r;s++)o[s]=i[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,i)}c.displayName="MDXCreateElement"},9746:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>s});var a=i(7462),n=(i(7294),i(3905));const r={},o="Mediation docs",d={unversionedId:"docs/Mediation",id:"docs/Mediation",title:"Mediation docs",description:"Concepts",source:"@site/docs/docs/Mediation.md",sourceDirName:"docs",slug:"/docs/Mediation",permalink:"/aries-acapy-docs/docs/Mediation",draft:!1,editUrl:"https://github.com/hyperledger/aries-acapy-docs/tree/main/docs/docusaurus/docs/docs/Mediation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Logging docs",permalink:"/aries-acapy-docs/docs/Logging"},next:{title:"Multi-Credentials",permalink:"/aries-acapy-docs/docs/Multicredentials"}},l={},s=[{value:"Concepts",id:"concepts",level:2},{value:"Command Line Arguments",id:"command-line-arguments",level:2},{value:"DIDComm Messages",id:"didcomm-messages",level:2},{value:"Admin API",id:"admin-api",level:2},{value:"Mediator Message Flow Overview",id:"mediator-message-flow-overview",level:2},{value:"Using a Mediator",id:"using-a-mediator",level:2}],m={toc:s},p="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"mediation-docs"},"Mediation docs"),(0,n.kt)("h2",{id:"concepts"},"Concepts"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DIDComm Message Forwarding")," - Sending an encrypted message to its recipient by first sending it to a third party responsible for forwarding the message on. Message contents are encrypted once for the recipient then wrapped in a ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/hyperledger/aries-rfcs/blob/master/concepts/0094-cross-domain-messaging/README.md#corerouting10forward"},"forward message")," encrypted to the third party."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Mediator")," - An agent that forwards messages to a client over a DIDComm connection."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Mediated Agent")," or ",(0,n.kt)("strong",{parentName:"li"},"Mediation client")," - The agent(s) to which a mediator is willing to forward messages."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Mediation Request")," - A message from a client to a mediator requesting mediation or forwarding."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Keylist")," - The list of public keys used by the mediator to lookup to which connection a forward message should be sent. Each mediated agent is responsible for maintaining the keylist with the mediator."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Keylist Update")," - A message from a client to a mediator informing the mediator of changes to the keylist."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Default Mediator")," - A mediator to be used with with every newly created DIDComm connection. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Mediation Connection")," - Connection between the mediator and the mediated agent or client. Agents can use as many mediators as the identity owner sees fit. Requests for mediation are handled on a per connection basis."),(0,n.kt)("li",{parentName:"ul"},"See ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/hyperledger/aries-rfcs/blob/master/features/0211-route-coordination/README.md"},"Aries RFC 0211: Coordinate Mediation Protocol")," for additional details on message attributes and more.")),(0,n.kt)("h2",{id:"command-line-arguments"},"Command Line Arguments"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"--open-mediation")," - Instructs mediators to automatically grant all incoming mediation requests."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"--mediator-invitation")," - Receive invitation, send mediation request and set as default mediator."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"--mediator-connections-invite")," - Connect to mediator through a connection invitation. If not specified, connect using an OOB invitation."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"--default-mediator-id")," - Set pre-existing mediator as default mediator."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"--clear-default-mediator")," - Clear the stored default mediator.")),(0,n.kt)("p",null,"The minimum set of arguments ",(0,n.kt)("em",{parentName:"p"},"required")," to enable mediation are:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash="},"aca-py start ... \\\n    --open-mediation\n")),(0,n.kt)("p",null,"To automate the mediation process on startup, ",(0,n.kt)("em",{parentName:"p"},"additionally")," specify the following argument on the ",(0,n.kt)("em",{parentName:"p"},"mediated")," agent (not the mediator):"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash="},'aca-py start ... \\\n    --mediator-invitation "<a multi-use invitation url from the mediator>"\n')),(0,n.kt)("p",null,"If a default mediator has already been established, then the ",(0,n.kt)("inlineCode",{parentName:"p"},"--default-mediator-id")," argument can be used ",(0,n.kt)("em",{parentName:"p"},"instead")," of the ",(0,n.kt)("inlineCode",{parentName:"p"},"--mediator-invitation"),"."),(0,n.kt)("h2",{id:"didcomm-messages"},"DIDComm Messages"),(0,n.kt)("p",null,"See ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/hyperledger/aries-rfcs/blob/master/features/0211-route-coordination/README.md"},"Aries RFC 0211: Coordinate Mediation Protocol"),"."),(0,n.kt)("h2",{id:"admin-api"},"Admin API"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GET mediation/requests"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Return a list of all mediation records. Filter by ",(0,n.kt)("inlineCode",{parentName:"li"},"conn_id"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"state"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"mediator_terms")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"recipient_terms"),"."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GET mediation/requests/{mediation_id}"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Retrieve a mediation record by id."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DELETE mediation/requests/{mediation_id}"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Delete mediation record by id."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"POST mediation/requests/{mediation_id}/grant"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"As a mediator, grant a stored mediation request and send ",(0,n.kt)("inlineCode",{parentName:"li"},"granted")," message to client."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"POST mediation/requests/{mediation_id}/deny"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"As a mediator, deny a stored mediation request and send ",(0,n.kt)("inlineCode",{parentName:"li"},"denied")," message to client."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"POST mediation/request/{conn_id}"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Send a mediation request to connection identified by the given connection ID."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GET mediation/keylists"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Returns key list associated with a connection. Filter on ",(0,n.kt)("inlineCode",{parentName:"li"},"client")," for keys mediated by other agents and ",(0,n.kt)("inlineCode",{parentName:"li"},"server")," for keys mediated by this agent."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"POST mediation/keylists/{mediation_id}/send-keylist-update"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Send keylist update message to mediator identified by the given mediation ID. Updates contained in body of request."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"POST mediation/keylists/{mediation_id}/send-keylist-query"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Send keylist query message to mediator identified by the given mediation ID."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"GET mediation/default-mediator")," ",(0,n.kt)("strong",{parentName:"li"},"(PR pending)"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Retrieve the currently set default mediator."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"PUT mediation/{mediation_id}/default-mediator")," ",(0,n.kt)("strong",{parentName:"li"},"(PR pending)"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Set the mediator identified by the given mediation ID as the default mediator."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DELETE mediation/default-mediator")," ",(0,n.kt)("strong",{parentName:"li"},"(PR pending)"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Clear the currently set default mediator (mediation status is maintained and remains functional, just not used as the default).")))),(0,n.kt)("h2",{id:"mediator-message-flow-overview"},"Mediator Message Flow Overview"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Mediator Message Flow",src:i(9e3).Z,width:"1163",height:"2318"})),(0,n.kt)("h2",{id:"using-a-mediator"},"Using a Mediator"),(0,n.kt)("p",null,"After establishing a connection with a mediator also having mediation granted, you can use that mediator id for future did_comm connections.\nWhen creating, receiving or accepting a invitation intended to be Mediated, you provide ",(0,n.kt)("inlineCode",{parentName:"p"},"mediation_id")," with the desired mediator id. if using a single mediator for all future connections, You can set a default mediation id. If no mediation_id is provided the default mediation id will be used instead."))}u.isMDXComponent=!0},9e3:(e,t,i)=>{i.d(t,{Z:()=>a});const a=i.p+"assets/images/mediation-message-flow-4c479368b74b51d70252a1023963545c.png"}}]);