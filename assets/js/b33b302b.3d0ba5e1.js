"use strict";(self.webpackChunkaries_cloud_agent_python_documentation=self.webpackChunkaries_cloud_agent_python_documentation||[]).push([[8839],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var r=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=r.createContext({}),i=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=i(e.components);return r.createElement(p.Provider,{value:t},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),y=i(a),u=l,c=y["".concat(p,".").concat(u)]||y[u]||m[u]||n;return a?r.createElement(c,s(s({ref:t},d),{},{components:a})):r.createElement(c,s({ref:t},d))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,s=new Array(n);s[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[y]="string"==typeof e?e:l,s[1]=o;for(var i=2;i<n;i++)s[i]=a[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9835:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>n,metadata:()=>o,toc:()=>i});var r=a(7462),l=(a(7294),a(3905));const n={},s="aries_cloudagent.wallet package",o={unversionedId:"code/generated/aries_cloudagent.wallet",id:"code/generated/aries_cloudagent.wallet",title:"aries_cloudagent.wallet package",description:"Abstract and Indy wallet handling.",source:"@site/docs/code/generated/aries_cloudagent.wallet.md",sourceDirName:"code/generated",slug:"/code/generated/aries_cloudagent.wallet",permalink:"/aries-acapy-docs/code/generated/aries_cloudagent.wallet",draft:!1,editUrl:"https://github.com/hyperledger/aries-acapy-docs/tree/main/docs/docusaurus/docs/code/generated/aries_cloudagent.wallet.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"aries_cloudagent.vc.vc_ld.models package",permalink:"/aries-acapy-docs/code/generated/aries_cloudagent.vc.vc_ld.models"},next:{title:"aries_cloudagent.wallet.models package",permalink:"/aries-acapy-docs/code/generated/aries_cloudagent.wallet.models"}},p={},i=[{value:"Subpackages",id:"subpackages",level:2},{value:"Submodules",id:"submodules",level:2},{value:"aries_cloudagent.wallet.askar module",id:"aries_cloudagentwalletaskar-module",level:2},{value:"aries_cloudagent.wallet.base module",id:"aries_cloudagentwalletbase-module",level:2},{value:"<em>class</em> aries_cloudagent.wallet.base.BaseWallet()",id:"class-aries_cloudagentwalletbasebasewallet",level:3},{value:"<em>abstract async</em> create_local_did(method: DIDMethod, key_type: KeyType, seed: Optional[str] = None, did: Optional[str] = None, metadata: Optional[dict] = None)",id:"abstract-async-create_local_didmethod-didmethod-key_type-keytype-seed-optionalstr--none-did-optionalstr--none-metadata-optionaldict--none",level:4},{value:"<em>async</em> create_public_did(method: DIDMethod, key_type: KeyType, seed: Optional[str] = None, did: Optional[str] = None, metadata: dict = {})",id:"async-create_public_didmethod-didmethod-key_type-keytype-seed-optionalstr--none-did-optionalstr--none-metadata-dict--",level:4},{value:"<em>abstract async</em> create_signing_key(key_type: KeyType, seed: Optional[str] = None, metadata: Optional[dict] = None)",id:"abstract-async-create_signing_keykey_type-keytype-seed-optionalstr--none-metadata-optionaldict--none",level:4},{value:"<em>abstract async</em> get_local_did(did: str)",id:"abstract-async-get_local_diddid-str",level:4},{value:"<em>abstract async</em> get_local_did_for_verkey(verkey: str)",id:"abstract-async-get_local_did_for_verkeyverkey-str",level:4},{value:"<em>abstract async</em> get_local_dids()",id:"abstract-async-get_local_dids",level:4},{value:"<em>async</em> get_posted_dids()",id:"async-get_posted_dids",level:4},{value:"<em>abstract async</em> get_public_did()",id:"abstract-async-get_public_did",level:4},{value:"<em>abstract async</em> get_signing_key(verkey: str)",id:"abstract-async-get_signing_keyverkey-str",level:4},{value:"<em>abstract async</em> pack_message(message: str, to_verkeys: Sequence[str], from_verkey: Optional[str] = None)",id:"abstract-async-pack_messagemessage-str-to_verkeys-sequencestr-from_verkey-optionalstr--none",level:4},{value:"<em>abstract async</em> replace_local_did_metadata(did: str, metadata: dict)",id:"abstract-async-replace_local_did_metadatadid-str-metadata-dict",level:4},{value:"<em>abstract async</em> replace_signing_key_metadata(verkey: str, metadata: dict)",id:"abstract-async-replace_signing_key_metadataverkey-str-metadata-dict",level:4},{value:"<em>abstract async</em> rotate_did_keypair_apply(did: str)",id:"abstract-async-rotate_did_keypair_applydid-str",level:4},{value:"<em>abstract async</em> rotate_did_keypair_start(did: str, next_seed: Optional[str] = None)",id:"abstract-async-rotate_did_keypair_startdid-str-next_seed-optionalstr--none",level:4},{value:"<em>async</em> set_did_endpoint(did: str, endpoint: str, _ledger: BaseLedger, endpoint_type: Optional[EndpointType] = None, write_ledger: bool = True, endorser_did: Optional[str] = None, routing_keys: Optional[List[str]] = None)",id:"async-set_did_endpointdid-str-endpoint-str-_ledger-baseledger-endpoint_type-optionalendpointtype--none-write_ledger-bool--true-endorser_did-optionalstr--none-routing_keys-optionalliststr--none",level:4},{value:"<em>abstract async</em> set_public_did(did: Union[str, DIDInfo])",id:"abstract-async-set_public_diddid-unionstr-didinfo",level:4},{value:"<em>abstract async</em> sign_message(message: Union[List[bytes], bytes], from_verkey: str)",id:"abstract-async-sign_messagemessage-unionlistbytes-bytes-from_verkey-str",level:4},{value:"<em>abstract async</em> unpack_message(enc_message: bytes)",id:"abstract-async-unpack_messageenc_message-bytes",level:4},{value:"<em>abstract async</em> verify_message(message: Union[List[bytes], bytes], signature: bytes, from_verkey: str, key_type: KeyType)",id:"abstract-async-verify_messagemessage-unionlistbytes-bytes-signature-bytes-from_verkey-str-key_type-keytype",level:4},{value:"aries_cloudagent.wallet.bbs module",id:"aries_cloudagentwalletbbs-module",level:2},{value:"<em>exception</em> aries_cloudagent.wallet.bbs.BbsException(*args, error_code: Optional[str] = None, **kwargs)",id:"exception-aries_cloudagentwalletbbsbbsexceptionargs-error_code-optionalstr--none-kwargs",level:3},{value:"aries_cloudagent.wallet.bbs.create_bls12381g2_keypair(seed: Optional[bytes] = None)",id:"aries_cloudagentwalletbbscreate_bls12381g2_keypairseed-optionalbytes--none",level:3},{value:"aries_cloudagent.wallet.bbs.sign_messages_bls12381g2(messages: List[bytes], secret: bytes)",id:"aries_cloudagentwalletbbssign_messages_bls12381g2messages-listbytes-secret-bytes",level:3},{value:"aries_cloudagent.wallet.bbs.verify_signed_messages_bls12381g2(messages: List[bytes], signature: bytes, public_key: bytes)",id:"aries_cloudagentwalletbbsverify_signed_messages_bls12381g2messages-listbytes-signature-bytes-public_key-bytes",level:3},{value:"aries_cloudagent.wallet.crypto module",id:"aries_cloudagentwalletcrypto-module",level:2},{value:"aries_cloudagent.wallet.did_info module",id:"aries_cloudagentwalletdid_info-module",level:2},{value:"<em>class</em> aries_cloudagent.wallet.did_info.DIDInfo(did, verkey, metadata, method, key_type)",id:"class-aries_cloudagentwalletdid_infodidinfodid-verkey-metadata-method-key_type",level:3},{value:"<em>property</em> did()",id:"property-did",level:4},{value:"<em>property</em> key_type()",id:"property-key_type",level:4},{value:"<em>property</em> metadata()",id:"property-metadata",level:4},{value:"<em>property</em> method()",id:"property-method",level:4},{value:"<em>property</em> verkey()",id:"property-verkey",level:4},{value:"<em>class</em> aries_cloudagent.wallet.did_info.KeyInfo(verkey, metadata, key_type)",id:"class-aries_cloudagentwalletdid_infokeyinfoverkey-metadata-key_type",level:3},{value:"<em>property</em> key_type()",id:"property-key_type-1",level:4},{value:"<em>property</em> metadata()",id:"property-metadata-1",level:4},{value:"<em>property</em> verkey()",id:"property-verkey-1",level:4},{value:"aries_cloudagent.wallet.did_method module",id:"aries_cloudagentwalletdid_method-module",level:2},{value:"<em>class</em> aries_cloudagent.wallet.did_method.DIDMethod(name: str, key_types: ListKeyType, rotation: bool = False, holder_defined_did: HolderDefinedDid = HolderDefinedDid.NO)",id:"class-aries_cloudagentwalletdid_methoddidmethodname-str-key_types-listkeytype-rotation-bool--false-holder_defined_did-holderdefineddid--holderdefineddidno",level:3},{value:"holder_defined_did()",id:"holder_defined_did",level:4},{value:"<em>property</em> method_name()",id:"property-method_name",level:4},{value:"<em>property</em> supported_key_types()",id:"property-supported_key_types",level:4},{value:"supports_key_type(key_type: KeyType)",id:"supports_key_typekey_type-keytype",level:4},{value:"<em>property</em> supports_rotation()",id:"property-supports_rotation",level:4},{value:"<em>class</em> aries_cloudagent.wallet.did_method.DIDMethods()",id:"class-aries_cloudagentwalletdid_methoddidmethods",level:3},{value:"from_did(did: str)",id:"from_diddid-str",level:4},{value:"from_metadata(metadata: Mapping)",id:"from_metadatametadata-mapping",level:4},{value:"from_method(method_name: str)",id:"from_methodmethod_name-str",level:4},{value:"register(method: DIDMethod)",id:"registermethod-didmethod",level:4},{value:"registered(method: str)",id:"registeredmethod-str",level:4},{value:"<em>class</em> aries_cloudagent.wallet.did_method.HolderDefinedDid(value)",id:"class-aries_cloudagentwalletdid_methodholderdefineddidvalue",level:3},{value:"ALLOWED(<em> = &#39;allowed</em> )",id:"allowed--allowed-",level:4},{value:"NO(<em> = &#39;no</em> )",id:"no--no-",level:4},{value:"REQUIRED(<em> = &#39;required</em> )",id:"required--required-",level:4},{value:"aries_cloudagent.wallet.did_posture module",id:"aries_cloudagentwalletdid_posture-module",level:2},{value:"<em>class</em> aries_cloudagent.wallet.did_posture.DIDPosture(value)",id:"class-aries_cloudagentwalletdid_posturedidposturevalue",level:3},{value:"POSTED(<em> = DIDPostureSpec(moniker=&#39;posted&#39;, ordinal=1, public=False, posted=True</em> )",id:"posted--didposturespecmonikerposted-ordinal1-publicfalse-postedtrue-",level:4},{value:"PUBLIC(<em> = DIDPostureSpec(moniker=&#39;public&#39;, ordinal=0, public=True, posted=True</em> )",id:"public--didposturespecmonikerpublic-ordinal0-publictrue-postedtrue-",level:4},{value:"WALLET<em>ONLY(</em> = DIDPostureSpec(moniker=&#39;wallet<em>only&#39;, ordinal=2, public=False, posted=False</em> )",id:"walletonly--didposturespecmonikerwalletonly-ordinal2-publicfalse-postedfalse-",level:4},{value:"<em>static</em> get(posture: Union[str, Mapping])",id:"static-getposture-unionstr-mapping",level:4},{value:"<em>property</em> metadata(<em>: Mapping(https://docs.python.org/3/library/typing.html#typing.Mapping</em> )",id:"property-metadata-mappinghttpsdocspythonorg3librarytypinghtmltypingmapping-",level:4},{value:"<em>property</em> moniker(<em>: str(https://docs.python.org/3/library/stdtypes.html#str</em> )",id:"property-moniker-strhttpsdocspythonorg3librarystdtypeshtmlstr-",level:4},{value:"<em>property</em> ordinal(<em>: Mapping(https://docs.python.org/3/library/typing.html#typing.Mapping</em> )",id:"property-ordinal-mappinghttpsdocspythonorg3librarytypinghtmltypingmapping-",level:4},{value:"<em>class</em> aries_cloudagent.wallet.did_posture.DIDPostureSpec(moniker, ordinal, public, posted)",id:"class-aries_cloudagentwalletdid_posturedidposturespecmoniker-ordinal-public-posted",level:3},{value:"<em>property</em> moniker()",id:"property-moniker",level:4},{value:"<em>property</em> ordinal()",id:"property-ordinal",level:4},{value:"<em>property</em> posted()",id:"property-posted",level:4},{value:"<em>property</em> public()",id:"property-public",level:4},{value:"aries_cloudagent.wallet.error module",id:"aries_cloudagentwalleterror-module",level:2},{value:"<em>exception</em> aries_cloudagent.wallet.error.WalletDuplicateError(*args, error_code: Optional[str] = None, **kwargs)",id:"exception-aries_cloudagentwalleterrorwalletduplicateerrorargs-error_code-optionalstr--none-kwargs",level:3},{value:"<em>exception</em> aries_cloudagent.wallet.error.WalletError(*args, error_code: Optional[str] = None, **kwargs)",id:"exception-aries_cloudagentwalleterrorwalleterrorargs-error_code-optionalstr--none-kwargs",level:3},{value:"<em>exception</em> aries_cloudagent.wallet.error.WalletNotFoundError(*args, error_code: Optional[str] = None, **kwargs)",id:"exception-aries_cloudagentwalleterrorwalletnotfounderrorargs-error_code-optionalstr--none-kwargs",level:3},{value:"<em>exception</em> aries_cloudagent.wallet.error.WalletSettingsError(*args, error_code: Optional[str] = None, **kwargs)",id:"exception-aries_cloudagentwalleterrorwalletsettingserrorargs-error_code-optionalstr--none-kwargs",level:3},{value:"aries_cloudagent.wallet.in_memory module",id:"aries_cloudagentwalletin_memory-module",level:2},{value:"aries_cloudagent.wallet.indy module",id:"aries_cloudagentwalletindy-module",level:2},{value:"aries_cloudagent.wallet.key_pair module",id:"aries_cloudagentwalletkey_pair-module",level:2},{value:"<em>class</em> aries_cloudagent.wallet.key_pair.KeyPairStorageManager(store: BaseStorage)",id:"class-aries_cloudagentwalletkey_pairkeypairstoragemanagerstore-basestorage",level:3},{value:"<em>async</em> delete_key_pair(verkey: str)",id:"async-delete_key_pairverkey-str",level:4},{value:"<em>async</em> find_key_pairs(tag_query: Optional[Mapping] = None)",id:"async-find_key_pairstag_query-optionalmapping--none",level:4},{value:"<em>async</em> get_key_pair(verkey: str)",id:"async-get_key_pairverkey-str",level:4},{value:"<em>async</em> store_key_pair(public_key: bytes, secret_key: bytes, key_type: KeyType, metadata: dict = {}, tags: dict = {})",id:"async-store_key_pairpublic_key-bytes-secret_key-bytes-key_type-keytype-metadata-dict---tags-dict--",level:4},{value:"<em>async</em> update_key_pair_metadata(verkey: str, metadata: dict)",id:"async-update_key_pair_metadataverkey-str-metadata-dict",level:4},{value:"aries_cloudagent.wallet.key_type module",id:"aries_cloudagentwalletkey_type-module",level:2},{value:"<em>class</em> aries_cloudagent.wallet.key_type.KeyType(key_type: str, multicodec_name: str, multicodec_prefix: bytes)",id:"class-aries_cloudagentwalletkey_typekeytypekey_type-str-multicodec_name-str-multicodec_prefix-bytes",level:3},{value:"<em>property</em> key<em>type(</em>: str",id:"property-keytype-str",level:4},{value:"<em>property</em> multicodec<em>name(</em>: str",id:"property-multicodecname-str",level:4},{value:"<em>property</em> multicodec<em>prefix(</em>: bytes",id:"property-multicodecprefix-bytes",level:4},{value:"<em>class</em> aries_cloudagent.wallet.key_type.KeyTypes()",id:"class-aries_cloudagentwalletkey_typekeytypes",level:3},{value:"from_key_type(key_type: str)",id:"from_key_typekey_type-str",level:4},{value:"from_multicodec_name(multicodec_name: str)",id:"from_multicodec_namemulticodec_name-str",level:4},{value:"from_multicodec_prefix(multicodec_prefix: bytes)",id:"from_multicodec_prefixmulticodec_prefix-bytes",level:4},{value:"from_prefixed_bytes(prefixed_bytes: bytes)",id:"from_prefixed_bytesprefixed_bytes-bytes",level:4},{value:"register(key_type: KeyType)",id:"registerkey_type-keytype",level:4},{value:"aries_cloudagent.wallet.routes module",id:"aries_cloudagentwalletroutes-module",level:2},{value:"aries_cloudagent.wallet.util module",id:"aries_cloudagentwalletutil-module",level:2},{value:"aries_cloudagent.wallet.util.abbr_verkey(full_verkey: str, did: Optional[str] = None)",id:"aries_cloudagentwalletutilabbr_verkeyfull_verkey-str-did-optionalstr--none",level:3},{value:"aries_cloudagent.wallet.util.b58_to_bytes(val: str)",id:"aries_cloudagentwalletutilb58_to_bytesval-str",level:3},{value:"aries_cloudagent.wallet.util.b64_to_bytes(val: str, urlsafe=False)",id:"aries_cloudagentwalletutilb64_to_bytesval-str-urlsafefalse",level:3},{value:"aries_cloudagent.wallet.util.b64_to_str(val: str, urlsafe=False, encoding=None)",id:"aries_cloudagentwalletutilb64_to_strval-str-urlsafefalse-encodingnone",level:3},{value:"aries_cloudagent.wallet.util.bytes_to_b58(val: bytes)",id:"aries_cloudagentwalletutilbytes_to_b58val-bytes",level:3},{value:"aries_cloudagent.wallet.util.bytes_to_b64(val: bytes, urlsafe=False, pad=True, encoding: str = &#39;ascii&#39;)",id:"aries_cloudagentwalletutilbytes_to_b64val-bytes-urlsafefalse-padtrue-encoding-str--ascii",level:3},{value:"aries_cloudagent.wallet.util.default_did_from_verkey(verkey: str)",id:"aries_cloudagentwalletutildefault_did_from_verkeyverkey-str",level:3},{value:"aries_cloudagent.wallet.util.full_verkey(did: str, abbr_verkey: str)",id:"aries_cloudagentwalletutilfull_verkeydid-str-abbr_verkey-str",level:3},{value:"<em>async</em> aries_cloudagent.wallet.util.notify_endorse_did_attrib_event(profile: Profile, did: str, meta_data: dict)",id:"async-aries_cloudagentwalletutilnotify_endorse_did_attrib_eventprofile-profile-did-str-meta_data-dict",level:3},{value:"<em>async</em> aries_cloudagent.wallet.util.notify_endorse_did_event(profile: Profile, did: str, meta_data: dict)",id:"async-aries_cloudagentwalletutilnotify_endorse_did_eventprofile-profile-did-str-meta_data-dict",level:3},{value:"aries_cloudagent.wallet.util.pad(val: str)",id:"aries_cloudagentwalletutilpadval-str",level:3},{value:"aries_cloudagent.wallet.util.random_seed()",id:"aries_cloudagentwalletutilrandom_seed",level:3},{value:"aries_cloudagent.wallet.util.set_urlsafe_b64(val: str, urlsafe: bool = True)",id:"aries_cloudagentwalletutilset_urlsafe_b64val-str-urlsafe-bool--true",level:3},{value:"aries_cloudagent.wallet.util.str_to_b64(val: str, urlsafe=False, encoding=None, pad=True)",id:"aries_cloudagentwalletutilstr_to_b64val-str-urlsafefalse-encodingnone-padtrue",level:3},{value:"aries_cloudagent.wallet.util.unpad(val: str)",id:"aries_cloudagentwalletutilunpadval-str",level:3}],d={toc:i},y="wrapper";function m(e){let{components:t,...a}=e;return(0,l.kt)(y,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"aries_cloudagentwallet-package"},"aries_cloudagent.wallet package"),(0,l.kt)("p",null,"Abstract and Indy wallet handling."),(0,l.kt)("h2",{id:"subpackages"},"Subpackages"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/aries-acapy-docs/code/generated/aries_cloudagent.wallet.models"},"aries_cloudagent.wallet.models package"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* [Submodules](/aries-acapy-docs/code/generated/aries_cloudagent.wallet.models#submodules)\n\n\n* [aries_cloudagent.wallet.models.wallet_record module](/aries-acapy-docs/code/generated/aries_cloudagent.wallet.models#aries-cloudagent-wallet-models-wallet-record-module)\n")),(0,l.kt)("h2",{id:"submodules"},"Submodules"),(0,l.kt)("h2",{id:"aries_cloudagentwalletaskar-module"},"aries_cloudagent.wallet.askar module"),(0,l.kt)("h2",{id:"aries_cloudagentwalletbase-module"},"aries_cloudagent.wallet.base module"),(0,l.kt)("p",null,"Wallet base class."),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletbasebasewallet"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.base.BaseWallet()"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/abc.html#abc.ABC"},(0,l.kt)("inlineCode",{parentName:"a"},"ABC"))),(0,l.kt)("p",null,"Abstract wallet interface."),(0,l.kt)("h4",{id:"abstract-async-create_local_didmethod-didmethod-key_type-keytype-seed-optionalstr--none-did-optionalstr--none-metadata-optionaldict--none"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," create_local_did(method: DIDMethod, key_type: KeyType, seed: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, did: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, metadata: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),"] = None)"),(0,l.kt)("p",null,"Create and store a new local DID."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"method")," \u2013 The method to use for the DID")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **key_type** \u2013 The key type to use for the DID\n\n\n* **seed** \u2013 Optional seed to use for DID\n\n\n* **did** \u2013 The DID to use\n\n\n* **metadata** \u2013 Metadata to store with DID\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  The created DIDInfo"))),(0,l.kt)("h4",{id:"async-create_public_didmethod-didmethod-key_type-keytype-seed-optionalstr--none-did-optionalstr--none-metadata-dict--"},(0,l.kt)("em",{parentName:"h4"},"async")," create_public_did(method: DIDMethod, key_type: KeyType, seed: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, did: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, metadata: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict")," = {})"),(0,l.kt)("p",null,"Create and store a new public DID."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"seed")," \u2013 Optional seed to use for DID")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **did** \u2013 The DID to use\n\n\n* **metadata** \u2013 Metadata to store with DID\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  The created DIDInfo"))),(0,l.kt)("h4",{id:"abstract-async-create_signing_keykey_type-keytype-seed-optionalstr--none-metadata-optionaldict--none"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," create_signing_key(key_type: KeyType, seed: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, metadata: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),"] = None)"),(0,l.kt)("p",null,"Create a new public/private signing keypair."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"key_type")," \u2013 Key type to create")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **seed** \u2013 Optional seed allowing deterministic key creation\n\n\n* **metadata** \u2013 Optional metadata to store with the keypair\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  A KeyInfo representing the new record"))),(0,l.kt)("h4",{id:"abstract-async-get_local_diddid-str"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," get_local_did(did: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Find info for a local DID."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",{parentName:"li"},"  ",(0,l.kt)("strong",{parentName:"p"},"did")," \u2013 The DID for which to get info"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  A DIDInfo instance for the DID"))),(0,l.kt)("h4",{id:"abstract-async-get_local_did_for_verkeyverkey-str"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," get_local_did_for_verkey(verkey: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Resolve a local DID from a verkey."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",{parentName:"li"},"  ",(0,l.kt)("strong",{parentName:"p"},"verkey")," \u2013 Verkey for which to get DID info"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  A DIDInfo instance for the DID"))),(0,l.kt)("h4",{id:"abstract-async-get_local_dids"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," get_local_dids()"),(0,l.kt)("p",null,"Get list of defined local DIDs."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  A list of DIDInfo instances"))),(0,l.kt)("h4",{id:"async-get_posted_dids"},(0,l.kt)("em",{parentName:"h4"},"async")," get_posted_dids()"),(0,l.kt)("p",null,"Get list of defined posted DIDs."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  A list of DIDInfo instances"))),(0,l.kt)("h4",{id:"abstract-async-get_public_did"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," get_public_did()"),(0,l.kt)("p",null,"Retrieve the public DID."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  The currently public DIDInfo, if any"))),(0,l.kt)("h4",{id:"abstract-async-get_signing_keyverkey-str"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," get_signing_key(verkey: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Fetch info for a signing keypair."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",{parentName:"li"},"  ",(0,l.kt)("strong",{parentName:"p"},"verkey")," \u2013 The verification key of the keypair"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  A KeyInfo representing the keypair"))),(0,l.kt)("h4",{id:"abstract-async-pack_messagemessage-str-to_verkeys-sequencestr-from_verkey-optionalstr--none"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," pack_message(message: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", to_verkeys: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Sequence"},"Sequence"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"], from_verkey: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,l.kt)("p",null,"Pack a message for one or more recipients."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"message")," \u2013 The message to pack")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **to_verkeys** \u2013 The verkeys to pack the message for\n\n\n* **from_verkey** \u2013 The sender verkey\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  The packed message"))),(0,l.kt)("h4",{id:"abstract-async-replace_local_did_metadatadid-str-metadata-dict"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," replace_local_did_metadata(did: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", metadata: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),")"),(0,l.kt)("p",null,"Replace the metadata associated with a local DID."),(0,l.kt)("p",null,"Prefer set_did_endpoint() to set endpoint in metadata."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"did")," \u2013 DID for which to replace metadata")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **metadata** \u2013 The new metadata\n")),(0,l.kt)("h4",{id:"abstract-async-replace_signing_key_metadataverkey-str-metadata-dict"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," replace_signing_key_metadata(verkey: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", metadata: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),")"),(0,l.kt)("p",null,"Replace the metadata associated with a signing keypair."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"verkey")," \u2013 The verification key of the keypair")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **metadata** \u2013 The new metadata to store\n")),(0,l.kt)("h4",{id:"abstract-async-rotate_did_keypair_applydid-str"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," rotate_did_keypair_apply(did: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Apply temporary keypair as main for DID that wallet owns."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",{parentName:"li"},"  ",(0,l.kt)("strong",{parentName:"p"},"did")," \u2013 signing DID"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Raises")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"WalletNotFoundError")," \u2013 if wallet does not own DID")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **WalletError** \u2013 if wallet has not started key rotation\n")),(0,l.kt)("h4",{id:"abstract-async-rotate_did_keypair_startdid-str-next_seed-optionalstr--none"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," rotate_did_keypair_start(did: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", next_seed: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,l.kt)("p",null,"Begin key rotation for DID that wallet owns: generate new keypair."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"did")," \u2013 signing DID")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **next_seed** \u2013 seed for incoming ed25519 key pair (default random)\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  The new verification key"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Raises")),(0,l.kt)("p",{parentName:"li"},"  ",(0,l.kt)("strong",{parentName:"p"},"WalletNotFoundError")," \u2013 if wallet does not own DID"))),(0,l.kt)("h4",{id:"async-set_did_endpointdid-str-endpoint-str-_ledger-baseledger-endpoint_type-optionalendpointtype--none-write_ledger-bool--true-endorser_did-optionalstr--none-routing_keys-optionalliststr--none"},(0,l.kt)("em",{parentName:"h4"},"async")," set_did_endpoint(did: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endpoint: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", _ledger: ",(0,l.kt)("a",{parentName:"h4",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger#aries_cloudagent.ledger.base.BaseLedger"},"BaseLedger"),", endpoint_type: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger#aries_cloudagent.ledger.endpoint_type.EndpointType"},"EndpointType"),"] = None, write_ledger: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, routing_keys: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"]] = None)"),(0,l.kt)("p",null,"Update the endpoint for a DID in the wallet, send to ledger if public or posted."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"did")," \u2013 DID for which to set endpoint")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **endpoint** \u2013 the endpoint to set, None to clear\n\n\n* **ledger** \u2013 the ledger to which to send endpoint update if\nDID is public or posted\n\n\n* **endpoint_type** \u2013 the type of the endpoint/service. Only endpoint_type\n\u2018endpoint\u2019 affects local wallet\n")),(0,l.kt)("h4",{id:"abstract-async-set_public_diddid-unionstr-didinfo"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," set_public_did(did: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Union"},"Union"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", DIDInfo])"),(0,l.kt)("p",null,"Assign the public DID."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  The updated DIDInfo"))),(0,l.kt)("h4",{id:"abstract-async-sign_messagemessage-unionlistbytes-bytes-from_verkey-str"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," sign_message(message: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Union"},"Union"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], from_verkey: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Sign message(s) using the private key associated with a given verkey."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"message")," \u2013 The message(s) to sign")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **from_verkey** \u2013 Sign using the private key related to this verkey\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  The signature"))),(0,l.kt)("h4",{id:"abstract-async-unpack_messageenc_message-bytes"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," unpack_message(enc_message: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),")"),(0,l.kt)("p",null,"Unpack a message."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",{parentName:"li"},"  ",(0,l.kt)("strong",{parentName:"p"},"enc_message")," \u2013 The encrypted message"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  (message, from_verkey, to_verkey)"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Return type")),(0,l.kt)("p",{parentName:"li"},"  A tuple"))),(0,l.kt)("h4",{id:"abstract-async-verify_messagemessage-unionlistbytes-bytes-signature-bytes-from_verkey-str-key_type-keytype"},(0,l.kt)("em",{parentName:"h4"},"abstract async")," verify_message(message: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Union"},"Union"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], signature: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),", from_verkey: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", key_type: KeyType)"),(0,l.kt)("p",null,"Verify a signature against the public key of the signer."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"message")," \u2013 The message to verify")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **signature** \u2013 The signature to verify\n\n\n* **from_verkey** \u2013 Verkey to use in verification\n\n\n* **key_type** \u2013 The key type to derive the signature verification algorithm from\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  True if verified, else False"))),(0,l.kt)("h2",{id:"aries_cloudagentwalletbbs-module"},"aries_cloudagent.wallet.bbs module"),(0,l.kt)("p",null,"BBS+ crypto."),(0,l.kt)("h3",{id:"exception-aries_cloudagentwalletbbsbbsexceptionargs-error_code-optionalstr--none-kwargs"},(0,l.kt)("em",{parentName:"h3"},"exception")," aries_cloudagent.wallet.bbs.BbsException(","*","args, error_code: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, ","*","*","kwargs)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.core#aries_cloudagent.core.error.BaseError"},(0,l.kt)("inlineCode",{parentName:"a"},"BaseError"))),(0,l.kt)("p",null,"Base BBS exception."),(0,l.kt)("h3",{id:"aries_cloudagentwalletbbscreate_bls12381g2_keypairseed-optionalbytes--none"},"aries_cloudagent.wallet.bbs.create_bls12381g2_keypair(seed: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"] = None)"),(0,l.kt)("p",null,"Create a public and private bls12381g2 keypair from a seed value."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("p",{parentName:"li"},"  ",(0,l.kt)("strong",{parentName:"p"},"seed")," \u2013 Seed for keypair"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  A tuple of (public key, secret key)"))),(0,l.kt)("h3",{id:"aries_cloudagentwalletbbssign_messages_bls12381g2messages-listbytes-secret-bytes"},"aries_cloudagent.wallet.bbs.sign_messages_bls12381g2(messages: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], secret: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),")"),(0,l.kt)("p",null,"Sign messages using a bls12381g2 private signing key."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"messages")," (",(0,l.kt)("em",{parentName:"li"},"List**["),(0,l.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},(0,l.kt)("em",{parentName:"a"},"bytes")),(0,l.kt)("em",{parentName:"li"},"]"),") \u2013 The messages to sign")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **secret** ([*bytes*](https://docs.python.org/3/library/stdtypes.html#bytes)) \u2013 The private signing key\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  The signature"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Return type")),(0,l.kt)("p",{parentName:"li"},"  ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes")))),(0,l.kt)("h3",{id:"aries_cloudagentwalletbbsverify_signed_messages_bls12381g2messages-listbytes-signature-bytes-public_key-bytes"},"aries_cloudagent.wallet.bbs.verify_signed_messages_bls12381g2(messages: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),"], signature: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),", public_key: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),")"),(0,l.kt)("p",null,"Verify an ed25519 signed message according to a public verification key."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"signed")," \u2013 The signed messages")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **public_key** \u2013 The public key to use in verification\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  True if verified, else False"))),(0,l.kt)("h2",{id:"aries_cloudagentwalletcrypto-module"},"aries_cloudagent.wallet.crypto module"),(0,l.kt)("h2",{id:"aries_cloudagentwalletdid_info-module"},"aries_cloudagent.wallet.did_info module"),(0,l.kt)("p",null,"KeyInfo, DIDInfo."),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletdid_infodidinfodid-verkey-metadata-method-key_type"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.did_info.DIDInfo(did, verkey, metadata, method, key_type)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#tuple"},(0,l.kt)("inlineCode",{parentName:"a"},"tuple"))),(0,l.kt)("h4",{id:"property-did"},(0,l.kt)("em",{parentName:"h4"},"property")," did()"),(0,l.kt)("p",null,"Alias for field number 0"),(0,l.kt)("h4",{id:"property-key_type"},(0,l.kt)("em",{parentName:"h4"},"property")," key_type()"),(0,l.kt)("p",null,"Alias for field number 4"),(0,l.kt)("h4",{id:"property-metadata"},(0,l.kt)("em",{parentName:"h4"},"property")," metadata()"),(0,l.kt)("p",null,"Alias for field number 2"),(0,l.kt)("h4",{id:"property-method"},(0,l.kt)("em",{parentName:"h4"},"property")," method()"),(0,l.kt)("p",null,"Alias for field number 3"),(0,l.kt)("h4",{id:"property-verkey"},(0,l.kt)("em",{parentName:"h4"},"property")," verkey()"),(0,l.kt)("p",null,"Alias for field number 1"),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletdid_infokeyinfoverkey-metadata-key_type"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.did_info.KeyInfo(verkey, metadata, key_type)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#tuple"},(0,l.kt)("inlineCode",{parentName:"a"},"tuple"))),(0,l.kt)("h4",{id:"property-key_type-1"},(0,l.kt)("em",{parentName:"h4"},"property")," key_type()"),(0,l.kt)("p",null,"Alias for field number 2"),(0,l.kt)("h4",{id:"property-metadata-1"},(0,l.kt)("em",{parentName:"h4"},"property")," metadata()"),(0,l.kt)("p",null,"Alias for field number 1"),(0,l.kt)("h4",{id:"property-verkey-1"},(0,l.kt)("em",{parentName:"h4"},"property")," verkey()"),(0,l.kt)("p",null,"Alias for field number 0"),(0,l.kt)("h2",{id:"aries_cloudagentwalletdid_method-module"},"aries_cloudagent.wallet.did_method module"),(0,l.kt)("p",null,"did method.py contains registry for did methods."),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletdid_methoddidmethodname-str-key_types-listkeytype-rotation-bool--false-holder_defined_did-holderdefineddid--holderdefineddidno"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.did_method.DIDMethod(name: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", key_types: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[KeyType]",", rotation: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = False, holder_defined_did: HolderDefinedDid = HolderDefinedDid.NO)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/functions.html#object"},(0,l.kt)("inlineCode",{parentName:"a"},"object"))),(0,l.kt)("p",null,"Class to represent a did method."),(0,l.kt)("h4",{id:"holder_defined_did"},"holder_defined_did()"),(0,l.kt)("p",null,"Return the did derivation policy."),(0,l.kt)("p",null,"eg: did:key DIDs are derived from the verkey -> HolderDefinedDid.NO\neg: did:web DIDs cannot be derived from key material -> HolderDefinedDid.REQUIRED"),(0,l.kt)("h4",{id:"property-method_name"},(0,l.kt)("em",{parentName:"h4"},"property")," method_name()"),(0,l.kt)("p",null,"Get method name."),(0,l.kt)("h4",{id:"property-supported_key_types"},(0,l.kt)("em",{parentName:"h4"},"property")," supported_key_types()"),(0,l.kt)("p",null,"Get supported key types."),(0,l.kt)("h4",{id:"supports_key_typekey_type-keytype"},"supports_key_type(key_type: KeyType)"),(0,l.kt)("p",null,"Check whether the current method supports the key type."),(0,l.kt)("h4",{id:"property-supports_rotation"},(0,l.kt)("em",{parentName:"h4"},"property")," supports_rotation()"),(0,l.kt)("p",null,"Check rotation support."),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletdid_methoddidmethods"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.did_method.DIDMethods()"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/functions.html#object"},(0,l.kt)("inlineCode",{parentName:"a"},"object"))),(0,l.kt)("p",null,"DID Method class specifying DID methods with supported key types."),(0,l.kt)("h4",{id:"from_diddid-str"},"from_did(did: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Get DID method instance from the did url."),(0,l.kt)("h4",{id:"from_metadatametadata-mapping"},"from_metadata(metadata: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Mapping"},"Mapping"),")"),(0,l.kt)("p",null,"Get DID method instance from metadata object."),(0,l.kt)("p",null,"Returns SOV if no metadata was found for backwards compatibility."),(0,l.kt)("h4",{id:"from_methodmethod_name-str"},"from_method(method_name: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Retrieve a did method from method name."),(0,l.kt)("h4",{id:"registermethod-didmethod"},"register(method: DIDMethod)"),(0,l.kt)("p",null,"Register a new did method."),(0,l.kt)("h4",{id:"registeredmethod-str"},"registered(method: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Check for a supported method."),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletdid_methodholderdefineddidvalue"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.did_method.HolderDefinedDid(value)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/enum.html#enum.Enum"},(0,l.kt)("inlineCode",{parentName:"a"},"Enum"))),(0,l.kt)("p",null,"Define if a holder can specify its own did for a given method."),(0,l.kt)("h4",{id:"allowed--allowed-"},"ALLOWED(",(0,l.kt)("em",{parentName:"h4"}," = 'allowed")," )"),(0,l.kt)("h4",{id:"no--no-"},"NO(",(0,l.kt)("em",{parentName:"h4"}," = 'no")," )"),(0,l.kt)("h4",{id:"required--required-"},"REQUIRED(",(0,l.kt)("em",{parentName:"h4"}," = 'required")," )"),(0,l.kt)("h2",{id:"aries_cloudagentwalletdid_posture-module"},"aries_cloudagent.wallet.did_posture module"),(0,l.kt)("p",null,"Ledger utilities."),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletdid_posturedidposturevalue"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.did_posture.DIDPosture(value)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/enum.html#enum.Enum"},(0,l.kt)("inlineCode",{parentName:"a"},"Enum"))),(0,l.kt)("p",null,"Enum for DID postures: public, posted but not public, or in wallet only."),(0,l.kt)("h4",{id:"posted--didposturespecmonikerposted-ordinal1-publicfalse-postedtrue-"},"POSTED(",(0,l.kt)("em",{parentName:"h4"}," = DIDPostureSpec(moniker='posted', ordinal=1, public=False, posted=True")," )"),(0,l.kt)("h4",{id:"public--didposturespecmonikerpublic-ordinal0-publictrue-postedtrue-"},"PUBLIC(",(0,l.kt)("em",{parentName:"h4"}," = DIDPostureSpec(moniker='public', ordinal=0, public=True, posted=True")," )"),(0,l.kt)("h4",{id:"walletonly--didposturespecmonikerwalletonly-ordinal2-publicfalse-postedfalse-"},"WALLET",(0,l.kt)("em",{parentName:"h4"},"ONLY(")," = DIDPostureSpec(moniker='wallet",(0,l.kt)("em",{parentName:"h4"},"only', ordinal=2, public=False, posted=False")," )"),(0,l.kt)("h4",{id:"static-getposture-unionstr-mapping"},(0,l.kt)("em",{parentName:"h4"},"static")," get(posture: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Union"},"Union"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Mapping"},"Mapping"),"])"),(0,l.kt)("p",null,"Return enum instance corresponding to input string or DID metadata."),(0,l.kt)("h4",{id:"property-metadata-mappinghttpsdocspythonorg3librarytypinghtmltypingmapping-"},(0,l.kt)("em",{parentName:"h4"},"property")," metadata(",(0,l.kt)("em",{parentName:"h4"},": ","[Mapping]","(",(0,l.kt)("a",{parentName:"em",href:"https://docs.python.org/3/library/typing.html#typing.Mapping"},"https://docs.python.org/3/library/typing.html#typing.Mapping"))," )"),(0,l.kt)("p",null,"DID metadata for DID posture."),(0,l.kt)("h4",{id:"property-moniker-strhttpsdocspythonorg3librarystdtypeshtmlstr-"},(0,l.kt)("em",{parentName:"h4"},"property")," moniker(",(0,l.kt)("em",{parentName:"h4"},": ","[str]","(",(0,l.kt)("a",{parentName:"em",href:"https://docs.python.org/3/library/stdtypes.html#str"},"https://docs.python.org/3/library/stdtypes.html#str"))," )"),(0,l.kt)("p",null,"Name for DID posture."),(0,l.kt)("h4",{id:"property-ordinal-mappinghttpsdocspythonorg3librarytypinghtmltypingmapping-"},(0,l.kt)("em",{parentName:"h4"},"property")," ordinal(",(0,l.kt)("em",{parentName:"h4"},": ","[Mapping]","(",(0,l.kt)("a",{parentName:"em",href:"https://docs.python.org/3/library/typing.html#typing.Mapping"},"https://docs.python.org/3/library/typing.html#typing.Mapping"))," )"),(0,l.kt)("p",null,"public first, then posted and wallet-only."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Type")),(0,l.kt)("p",{parentName:"li"},"  Ordinal for presentation"))),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletdid_posturedidposturespecmoniker-ordinal-public-posted"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.did_posture.DIDPostureSpec(moniker, ordinal, public, posted)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#tuple"},(0,l.kt)("inlineCode",{parentName:"a"},"tuple"))),(0,l.kt)("h4",{id:"property-moniker"},(0,l.kt)("em",{parentName:"h4"},"property")," moniker()"),(0,l.kt)("p",null,"Alias for field number 0"),(0,l.kt)("h4",{id:"property-ordinal"},(0,l.kt)("em",{parentName:"h4"},"property")," ordinal()"),(0,l.kt)("p",null,"Alias for field number 1"),(0,l.kt)("h4",{id:"property-posted"},(0,l.kt)("em",{parentName:"h4"},"property")," posted()"),(0,l.kt)("p",null,"Alias for field number 3"),(0,l.kt)("h4",{id:"property-public"},(0,l.kt)("em",{parentName:"h4"},"property")," public()"),(0,l.kt)("p",null,"Alias for field number 2"),(0,l.kt)("h2",{id:"aries_cloudagentwalleterror-module"},"aries_cloudagent.wallet.error module"),(0,l.kt)("p",null,"Wallet-related exceptions."),(0,l.kt)("h3",{id:"exception-aries_cloudagentwalleterrorwalletduplicateerrorargs-error_code-optionalstr--none-kwargs"},(0,l.kt)("em",{parentName:"h3"},"exception")," aries_cloudagent.wallet.error.WalletDuplicateError(","*","args, error_code: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, ","*","*","kwargs)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("inlineCode",{parentName:"p"},"WalletError")),(0,l.kt)("p",null,"Duplicate record exception."),(0,l.kt)("h3",{id:"exception-aries_cloudagentwalleterrorwalleterrorargs-error_code-optionalstr--none-kwargs"},(0,l.kt)("em",{parentName:"h3"},"exception")," aries_cloudagent.wallet.error.WalletError(","*","args, error_code: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, ","*","*","kwargs)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.core#aries_cloudagent.core.error.BaseError"},(0,l.kt)("inlineCode",{parentName:"a"},"BaseError"))),(0,l.kt)("p",null,"General wallet exception."),(0,l.kt)("h3",{id:"exception-aries_cloudagentwalleterrorwalletnotfounderrorargs-error_code-optionalstr--none-kwargs"},(0,l.kt)("em",{parentName:"h3"},"exception")," aries_cloudagent.wallet.error.WalletNotFoundError(","*","args, error_code: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, ","*","*","kwargs)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("inlineCode",{parentName:"p"},"WalletError")),(0,l.kt)("p",null,"Record not found exception."),(0,l.kt)("h3",{id:"exception-aries_cloudagentwalleterrorwalletsettingserrorargs-error_code-optionalstr--none-kwargs"},(0,l.kt)("em",{parentName:"h3"},"exception")," aries_cloudagent.wallet.error.WalletSettingsError(","*","args, error_code: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, ","*","*","kwargs)"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("inlineCode",{parentName:"p"},"WalletError")),(0,l.kt)("p",null,"Invalid settings exception."),(0,l.kt)("h2",{id:"aries_cloudagentwalletin_memory-module"},"aries_cloudagent.wallet.in_memory module"),(0,l.kt)("h2",{id:"aries_cloudagentwalletindy-module"},"aries_cloudagent.wallet.indy module"),(0,l.kt)("h2",{id:"aries_cloudagentwalletkey_pair-module"},"aries_cloudagent.wallet.key_pair module"),(0,l.kt)("p",null,"Key pair storage manager."),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletkey_pairkeypairstoragemanagerstore-basestorage"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.key_pair.KeyPairStorageManager(store: ",(0,l.kt)("a",{parentName:"h3",href:"/aries-acapy-docs/code/generated/aries_cloudagent.storage#aries_cloudagent.storage.base.BaseStorage"},"BaseStorage"),")"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/functions.html#object"},(0,l.kt)("inlineCode",{parentName:"a"},"object"))),(0,l.kt)("p",null,"Key pair storage manager."),(0,l.kt)("h4",{id:"async-delete_key_pairverkey-str"},(0,l.kt)("em",{parentName:"h4"},"async")," delete_key_pair(verkey: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Remove a previously-stored key pair record."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Raises")),(0,l.kt)("p",{parentName:"li"},"  ",(0,l.kt)("strong",{parentName:"p"},"StorageNotFoundError")," \u2013 If the record is not found"))),(0,l.kt)("h4",{id:"async-find_key_pairstag_query-optionalmapping--none"},(0,l.kt)("em",{parentName:"h4"},"async")," find_key_pairs(tag_query: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Mapping"},"Mapping"),"] = None)"),(0,l.kt)("p",null,"Find key pairs by tag query."),(0,l.kt)("h4",{id:"async-get_key_pairverkey-str"},(0,l.kt)("em",{parentName:"h4"},"async")," get_key_pair(verkey: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Retrieve signing key pair from storage by verkey."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"storage")," (",(0,l.kt)("em",{parentName:"li"},"BaseStorage"),") \u2013 The storage to use for querying")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **verkey** ([*str*](https://docs.python.org/3/library/stdtypes.html#str)) \u2013 The verkey to query for\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Raises")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"StorageDuplicateError")," \u2013 If more than one key pair is found for this verkey")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **StorageNotFoundError** \u2013 If no key pair is found for this verkey\n")),(0,l.kt)("p",null,"Returns"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"dict: The key pair data\n")),(0,l.kt)("h4",{id:"async-store_key_pairpublic_key-bytes-secret_key-bytes-key_type-keytype-metadata-dict---tags-dict--"},(0,l.kt)("em",{parentName:"h4"},"async")," store_key_pair(public_key: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),", secret_key: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),", key_type: KeyType, metadata: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict")," = {}, tags: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict")," = {})"),(0,l.kt)("p",null,"Store signing key pair in storage."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Parameters")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"public_key")," (",(0,l.kt)("a",{parentName:"li",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},(0,l.kt)("em",{parentName:"a"},"bytes")),") \u2013 The public key")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"* **secret_key** ([*bytes*](https://docs.python.org/3/library/stdtypes.html#bytes)) \u2013 The secret key\n\n\n* **key_type** (*KeyType*) \u2013 The key type\n\n\n* **metadata** ([*dict*](https://docs.python.org/3/library/stdtypes.html#dict)*, **optional*) \u2013 The metadata\n\n\n* **tags** ([*dict*](https://docs.python.org/3/library/stdtypes.html#dict)*, **optional*) \u2013 The tags.\n")),(0,l.kt)("h4",{id:"async-update_key_pair_metadataverkey-str-metadata-dict"},(0,l.kt)("em",{parentName:"h4"},"async")," update_key_pair_metadata(verkey: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", metadata: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),")"),(0,l.kt)("p",null,"Update the metadata of a key pair record by verkey."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Raises")),(0,l.kt)("p",{parentName:"li"},"  ",(0,l.kt)("strong",{parentName:"p"},"StorageNotFoundError")," \u2013 If the record is not found."))),(0,l.kt)("h2",{id:"aries_cloudagentwalletkey_type-module"},"aries_cloudagent.wallet.key_type module"),(0,l.kt)("p",null,"Key type code."),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletkey_typekeytypekey_type-str-multicodec_name-str-multicodec_prefix-bytes"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.key_type.KeyType(key_type: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", multicodec_name: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", multicodec_prefix: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),")"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/functions.html#object"},(0,l.kt)("inlineCode",{parentName:"a"},"object"))),(0,l.kt)("p",null,"Key Type class."),(0,l.kt)("h4",{id:"property-keytype-str"},(0,l.kt)("em",{parentName:"h4"},"property")," key",(0,l.kt)("em",{parentName:"h4"},"type("),": ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str_"},"str")),(0,l.kt)("p",null,"Get Key type, type."),(0,l.kt)("h4",{id:"property-multicodecname-str"},(0,l.kt)("em",{parentName:"h4"},"property")," multicodec",(0,l.kt)("em",{parentName:"h4"},"name("),": ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str_"},"str")),(0,l.kt)("p",null,"Get key type multicodec name."),(0,l.kt)("h4",{id:"property-multicodecprefix-bytes"},(0,l.kt)("em",{parentName:"h4"},"property")," multicodec",(0,l.kt)("em",{parentName:"h4"},"prefix("),": ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes_"},"bytes")),(0,l.kt)("p",null,"Get key type multicodec prefix."),(0,l.kt)("h3",{id:"class-aries_cloudagentwalletkey_typekeytypes"},(0,l.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.wallet.key_type.KeyTypes()"),(0,l.kt)("p",null,"Bases: ",(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/functions.html#object"},(0,l.kt)("inlineCode",{parentName:"a"},"object"))),(0,l.kt)("p",null,"KeyType class specifying key types with multicodec name."),(0,l.kt)("h4",{id:"from_key_typekey_type-str"},"from_key_type(key_type: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Get KeyType instance from the key type identifier."),(0,l.kt)("h4",{id:"from_multicodec_namemulticodec_name-str"},"from_multicodec_name(multicodec_name: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Get KeyType instance based on multicodec name. Returns None if not found."),(0,l.kt)("h4",{id:"from_multicodec_prefixmulticodec_prefix-bytes"},"from_multicodec_prefix(multicodec_prefix: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),")"),(0,l.kt)("p",null,"Get KeyType instance based on multicodec prefix. Returns None if not found."),(0,l.kt)("h4",{id:"from_prefixed_bytesprefixed_bytes-bytes"},"from_prefixed_bytes(prefixed_bytes: ",(0,l.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),")"),(0,l.kt)("p",null,"Get KeyType instance based on prefix in bytes. Returns None if not found."),(0,l.kt)("h4",{id:"registerkey_type-keytype"},"register(key_type: KeyType)"),(0,l.kt)("p",null,"Register a new key type."),(0,l.kt)("h2",{id:"aries_cloudagentwalletroutes-module"},"aries_cloudagent.wallet.routes module"),(0,l.kt)("h2",{id:"aries_cloudagentwalletutil-module"},"aries_cloudagent.wallet.util module"),(0,l.kt)("p",null,"Wallet utility functions."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilabbr_verkeyfull_verkey-str-did-optionalstr--none"},"aries_cloudagent.wallet.util.abbr_verkey(full_verkey: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", did: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,l.kt)("p",null,"Given a full verkey and DID, return the abbreviated verkey."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilb58_to_bytesval-str"},"aries_cloudagent.wallet.util.b58_to_bytes(val: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Convert a base 58 string to bytes."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilb64_to_bytesval-str-urlsafefalse"},"aries_cloudagent.wallet.util.b64_to_bytes(val: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", urlsafe=False)"),(0,l.kt)("p",null,"Convert a base 64 string to bytes."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilb64_to_strval-str-urlsafefalse-encodingnone"},"aries_cloudagent.wallet.util.b64_to_str(val: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", urlsafe=False, encoding=None)"),(0,l.kt)("p",null,"Convert a base 64 string to string on input encoding (default utf-8)."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilbytes_to_b58val-bytes"},"aries_cloudagent.wallet.util.bytes_to_b58(val: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),")"),(0,l.kt)("p",null,"Convert a byte string to base 58."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilbytes_to_b64val-bytes-urlsafefalse-padtrue-encoding-str--ascii"},"aries_cloudagent.wallet.util.bytes_to_b64(val: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#bytes"},"bytes"),", urlsafe=False, pad=True, encoding: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str")," = 'ascii')"),(0,l.kt)("p",null,"Convert a byte string to base 64."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutildefault_did_from_verkeyverkey-str"},"aries_cloudagent.wallet.util.default_did_from_verkey(verkey: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Given a verkey, return the default indy did."),(0,l.kt)("p",null,"By default the did is the first 16 bytes of the verkey."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilfull_verkeydid-str-abbr_verkey-str"},"aries_cloudagent.wallet.util.full_verkey(did: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", abbr_verkey: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Given a DID and abbreviated verkey, return the full verkey."),(0,l.kt)("h3",{id:"async-aries_cloudagentwalletutilnotify_endorse_did_attrib_eventprofile-profile-did-str-meta_data-dict"},(0,l.kt)("em",{parentName:"h3"},"async")," aries_cloudagent.wallet.util.notify_endorse_did_attrib_event(profile: ",(0,l.kt)("a",{parentName:"h3",href:"/aries-acapy-docs/code/generated/aries_cloudagent.core#aries_cloudagent.core.profile.Profile"},"Profile"),", did: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", meta_data: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),")"),(0,l.kt)("p",null,"Send notification for a DID ATTRIB post-process event."),(0,l.kt)("h3",{id:"async-aries_cloudagentwalletutilnotify_endorse_did_eventprofile-profile-did-str-meta_data-dict"},(0,l.kt)("em",{parentName:"h3"},"async")," aries_cloudagent.wallet.util.notify_endorse_did_event(profile: ",(0,l.kt)("a",{parentName:"h3",href:"/aries-acapy-docs/code/generated/aries_cloudagent.core#aries_cloudagent.core.profile.Profile"},"Profile"),", did: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", meta_data: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),")"),(0,l.kt)("p",null,"Send notification for a DID post-process event."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilpadval-str"},"aries_cloudagent.wallet.util.pad(val: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Pad base64 values if need be: JWT calls to omit trailing padding."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilrandom_seed"},"aries_cloudagent.wallet.util.random_seed()"),(0,l.kt)("p",null,"Generate a random seed value."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns")),(0,l.kt)("p",{parentName:"li"},"  A new random seed"))),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilset_urlsafe_b64val-str-urlsafe-bool--true"},"aries_cloudagent.wallet.util.set_urlsafe_b64(val: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", urlsafe: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True)"),(0,l.kt)("p",null,"Set URL safety in base64 encoding."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilstr_to_b64val-str-urlsafefalse-encodingnone-padtrue"},"aries_cloudagent.wallet.util.str_to_b64(val: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", urlsafe=False, encoding=None, pad=True)"),(0,l.kt)("p",null,"Convert a string to base64 string on input encoding (default utf-8)."),(0,l.kt)("h3",{id:"aries_cloudagentwalletutilunpadval-str"},"aries_cloudagent.wallet.util.unpad(val: ",(0,l.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,l.kt)("p",null,"Remove padding from base64 values if need be."))}m.isMDXComponent=!0}}]);