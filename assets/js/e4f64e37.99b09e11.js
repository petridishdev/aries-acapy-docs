"use strict";(self.webpackChunkaries_cloud_agent_python_documentation=self.webpackChunkaries_cloud_agent_python_documentation||[]).push([[7027],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},_=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=d(r),_=n,h=m["".concat(s,".").concat(_)]||m[_]||c[_]||o;return r?a.createElement(h,i(i({ref:t},p),{},{components:r})):a.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=_;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:n,i[1]=l;for(var d=2;d<o;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}_.displayName="MDXCreateElement"},4814:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=r(7462),n=(r(7294),r(3905));const o={},i="aries_cloudagent.ledger package",l={unversionedId:"code/generated/aries_cloudagent.ledger",id:"code/generated/aries_cloudagent.ledger",title:"aries_cloudagent.ledger package",description:"Subpackages",source:"@site/docs/code/generated/aries_cloudagent.ledger.md",sourceDirName:"code/generated",slug:"/code/generated/aries_cloudagent.ledger",permalink:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger",draft:!1,editUrl:"https://github.com/hyperledger/aries-acapy-docs/tree/main/docs/docusaurus/docs/code/generated/aries_cloudagent.ledger.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"aries_cloudagent.indy.sdk package",permalink:"/aries-acapy-docs/code/generated/aries_cloudagent.indy.sdk"},next:{title:"aries_cloudagent.ledger.merkel_validation package",permalink:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation"}},s={},d=[{value:"Subpackages",id:"subpackages",level:2},{value:"Submodules",id:"submodules",level:2},{value:"aries_cloudagent.ledger.base module",id:"aries_cloudagentledgerbase-module",level:2},{value:"<em>class</em> aries_cloudagent.ledger.base.BaseLedger()",id:"class-aries_cloudagentledgerbasebaseledger",level:3},{value:"BACKEND<em>NAME(</em>: str(https://docs.python.org/3/library/stdtypes.html#str_ <em> = Non</em> )",id:"backendname-strhttpsdocspythonorg3librarystdtypeshtmlstr_---non-",level:4},{value:"<em>abstract async</em> accept_txn_author_agreement(taa_record: dict, mechanism: str, accept_time: Optional[int] = None)",id:"abstract-async-accept_txn_author_agreementtaa_record-dict-mechanism-str-accept_time-optionalint--none",level:4},{value:"<em>property</em> backend(<em>: str(https://docs.python.org/3/library/stdtypes.html#str</em> )",id:"property-backend-strhttpsdocspythonorg3librarystdtypeshtmlstr-",level:4},{value:"<em>async</em> check_existing_schema(public_did: str, schema_name: str, schema_version: str, attribute_names: Sequence[str])",id:"async-check_existing_schemapublic_did-str-schema_name-str-schema_version-str-attribute_names-sequencestr",level:4},{value:"<em>async</em> create_and_send_credential_definition(issuer: IndyIssuer, schema_id: str, signature_type: Optional[str] = None, tag: Optional[str] = None, support_revocation: bool = False, write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"async-create_and_send_credential_definitionissuer-indyissuer-schema_id-str-signature_type-optionalstr--none-tag-optionalstr--none-support_revocation-bool--false-write_ledger-bool--true-endorser_did-optionalstr--none",level:4},{value:"<em>async</em> create_and_send_schema(issuer: IndyIssuer, schema_name: str, schema_version: str, attribute_names: Sequence[str], write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"async-create_and_send_schemaissuer-indyissuer-schema_name-str-schema_version-str-attribute_names-sequencestr-write_ledger-bool--true-endorser_did-optionalstr--none",level:4},{value:"did_to_nym(did: str)",id:"did_to_nymdid-str",level:4},{value:"<em>abstract async</em> fetch_schema_by_id(schema_id: str)",id:"abstract-async-fetch_schema_by_idschema_id-str",level:4},{value:"<em>abstract async</em> fetch_schema_by_seq_no(seq_no: int)",id:"abstract-async-fetch_schema_by_seq_noseq_no-int",level:4},{value:"<em>abstract async</em> fetch_txn_author_agreement()",id:"abstract-async-fetch_txn_author_agreement",level:4},{value:"<em>abstract async</em> get_all_endpoints_for_did(did: str)",id:"abstract-async-get_all_endpoints_for_diddid-str",level:4},{value:"<em>abstract async</em> get_credential_definition(credential_definition_id: str)",id:"abstract-async-get_credential_definitioncredential_definition_id-str",level:4},{value:"<em>abstract async</em> get_endpoint_for_did(did: str, endpoint_type: EndpointType = EndpointType.ENDPOINT)",id:"abstract-async-get_endpoint_for_diddid-str-endpoint_type-endpointtype--endpointtypeendpoint",level:4},{value:"<em>abstract async</em> get_key_for_did(did: str)",id:"abstract-async-get_key_for_diddid-str",level:4},{value:"<em>abstract async</em> get_latest_txn_author_acceptance()",id:"abstract-async-get_latest_txn_author_acceptance",level:4},{value:"<em>abstract async</em> get_nym_role(did: str)",id:"abstract-async-get_nym_roledid-str",level:4},{value:"<em>abstract async</em> get_revoc_reg_def(revoc_reg_id: str)",id:"abstract-async-get_revoc_reg_defrevoc_reg_id-str",level:4},{value:"<em>abstract async</em> get_revoc_reg_delta(revoc_reg_id: str, timestamp_from=0, timestamp_to=None)",id:"abstract-async-get_revoc_reg_deltarevoc_reg_id-str-timestamp_from0-timestamp_tonone",level:4},{value:"<em>abstract async</em> get_revoc_reg_entry(revoc_reg_id: str, timestamp: int)",id:"abstract-async-get_revoc_reg_entryrevoc_reg_id-str-timestamp-int",level:4},{value:"<em>abstract async</em> get_schema(schema_id: str)",id:"abstract-async-get_schemaschema_id-str",level:4},{value:"<em>abstract async</em> get_txn_author_agreement(reload: bool = False)",id:"abstract-async-get_txn_author_agreementreload-bool--false",level:4},{value:"<em>abstract async</em> get_wallet_public_did()",id:"abstract-async-get_wallet_public_did",level:4},{value:"<em>abstract async</em> is_ledger_read_only()",id:"abstract-async-is_ledger_read_only",level:4},{value:"<em>abstract</em> nym_to_did(nym: str)",id:"abstract-nym_to_didnym-str",level:4},{value:"<em>abstract property</em> read<em>only(</em>: bool",id:"abstract-property-readonly-bool",level:4},{value:"<em>abstract async</em> register_nym(did: str, verkey: str, alias: Optional[str] = None, role: Optional[str] = None, write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"abstract-async-register_nymdid-str-verkey-str-alias-optionalstr--none-role-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none",level:4},{value:"<em>abstract async</em> rotate_public_did_keypair(next_seed: Optional[str] = None)",id:"abstract-async-rotate_public_did_keypairnext_seed-optionalstr--none",level:4},{value:"<em>abstract async</em> send_revoc_reg_def(revoc_reg_def: dict, issuer_did: Optional[str] = None, write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"abstract-async-send_revoc_reg_defrevoc_reg_def-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none",level:4},{value:"<em>abstract async</em> send_revoc_reg_entry(revoc_reg_id: str, revoc_def_type: str, revoc_reg_entry: dict, issuer_did: Optional[str] = None, write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"abstract-async-send_revoc_reg_entryrevoc_reg_id-str-revoc_def_type-str-revoc_reg_entry-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none",level:4},{value:"taa_digest(version: str, text: str)",id:"taa_digestversion-str-text-str",level:4},{value:"<em>abstract async</em> txn_endorse(request_json: str, endorse_did: Optional[DIDInfo] = None)",id:"abstract-async-txn_endorserequest_json-str-endorse_did-optionaldidinfo--none",level:4},{value:"<em>abstract async</em> update_endpoint_for_did(did: str, endpoint: str, endpoint_type: EndpointType = EndpointType.ENDPOINT, write_ledger: bool = True, endorser_did: Optional[str] = None, routing_keys: Optional[List[str]] = None)",id:"abstract-async-update_endpoint_for_diddid-str-endpoint-str-endpoint_type-endpointtype--endpointtypeendpoint-write_ledger-bool--true-endorser_did-optionalstr--none-routing_keys-optionalliststr--none",level:4},{value:"<em>class</em> aries_cloudagent.ledger.base.Role(value)",id:"class-aries_cloudagentledgerbaserolevalue",level:3},{value:"ENDORSER(<em> = (101,</em> )",id:"endorser--101-",level:4},{value:"NETWORK<em>MONITOR(</em> = (201,_ )",id:"networkmonitor--201_-",level:4},{value:"ROLE<em>REMOVE(</em> = (&#39;&#39;,_ )",id:"roleremove--_-",level:4},{value:"STEWARD(<em> = (2,</em> )",id:"steward--2-",level:4},{value:"TRUSTEE(<em> = (0,</em> )",id:"trustee--0-",level:4},{value:"USER(<em> = (None, &#39;&#39;</em> )",id:"user--none--",level:4},{value:"<em>static</em> get(token: Optional[Union[str, int]] = None)",id:"static-gettoken-optionalunionstr-int--none",level:4},{value:"to_indy_num_str()",id:"to_indy_num_str",level:4},{value:"token()",id:"token",level:4},{value:"aries_cloudagent.ledger.endpoint_type module",id:"aries_cloudagentledgerendpoint_type-module",level:2},{value:"<em>class</em> aries_cloudagent.ledger.endpoint_type.EndpointType(value)",id:"class-aries_cloudagentledgerendpoint_typeendpointtypevalue",level:3},{value:"ENDPOINT(<em> = EndpointTypeName(w3c=&#39;Endpoint&#39;, indy=&#39;endpoint&#39;</em> )",id:"endpoint--endpointtypenamew3cendpoint-indyendpoint-",level:4},{value:"LINKED<em>DOMAINS(</em> = EndpointTypeName(w3c=&#39;LinkedDomains&#39;, indy=&#39;linked<em>domains&#39;</em> )",id:"linkeddomains--endpointtypenamew3clinkeddomains-indylinkeddomains-",level:4},{value:"PROFILE(<em> = EndpointTypeName(w3c=&#39;Profile&#39;, indy=&#39;profile&#39;</em> )",id:"profile--endpointtypenamew3cprofile-indyprofile-",level:4},{value:"<em>static</em> get(name: str)",id:"static-getname-str",level:4},{value:"<em>property</em> indy()",id:"property-indy",level:4},{value:"<em>property</em> w3c()",id:"property-w3c",level:4},{value:"<em>class</em> aries_cloudagent.ledger.endpoint_type.EndpointTypeName(w3c, indy)",id:"class-aries_cloudagentledgerendpoint_typeendpointtypenamew3c-indy",level:3},{value:"<em>property</em> indy()",id:"property-indy-1",level:4},{value:"<em>property</em> w3c()",id:"property-w3c-1",level:4},{value:"aries_cloudagent.ledger.error module",id:"aries_cloudagentledgererror-module",level:2},{value:"<em>exception</em> aries_cloudagent.ledger.error.BadLedgerRequestError(*args, error_code: Optional[str] = None, **kwargs)",id:"exception-aries_cloudagentledgererrorbadledgerrequesterrorargs-error_code-optionalstr--none-kwargs",level:3},{value:"<em>exception</em> aries_cloudagent.ledger.error.ClosedPoolError(*args, error_code: Optional[str] = None, **kwargs)",id:"exception-aries_cloudagentledgererrorclosedpoolerrorargs-error_code-optionalstr--none-kwargs",level:3},{value:"<em>exception</em> aries_cloudagent.ledger.error.LedgerConfigError(*args, error_code: Optional[str] = None, **kwargs)",id:"exception-aries_cloudagentledgererrorledgerconfigerrorargs-error_code-optionalstr--none-kwargs",level:3},{value:"<em>exception</em> aries_cloudagent.ledger.error.LedgerError(*args, error_code: Optional[str] = None, **kwargs)",id:"exception-aries_cloudagentledgererrorledgererrorargs-error_code-optionalstr--none-kwargs",level:3},{value:"<em>exception</em> aries_cloudagent.ledger.error.LedgerTransactionError(*args, error_code: Optional[str] = None, **kwargs)",id:"exception-aries_cloudagentledgererrorledgertransactionerrorargs-error_code-optionalstr--none-kwargs",level:3},{value:"aries_cloudagent.ledger.indy module",id:"aries_cloudagentledgerindy-module",level:2},{value:"<em>class</em> aries_cloudagent.ledger.indy.IndySdkLedger(pool: IndySdkLedgerPool, profile: IndySdkProfile)",id:"class-aries_cloudagentledgerindyindysdkledgerpool-indysdkledgerpool-profile-indysdkprofile",level:3},{value:"BACKEND<em>NAME(</em>: str(https://docs.python.org/3/library/stdtypes.html#str_ <em> = &#39;indy</em> )",id:"backendname-strhttpsdocspythonorg3librarystdtypeshtmlstr_---indy-",level:4},{value:"<em>async</em> accept_txn_author_agreement(taa_record: dict, mechanism: str, accept_time: Optional[int] = None)",id:"async-accept_txn_author_agreementtaa_record-dict-mechanism-str-accept_time-optionalint--none",level:4},{value:"<em>async</em> build_and_return_get_nym_request(submitter_did: Optional[str], target_did: str)",id:"async-build_and_return_get_nym_requestsubmitter_did-optionalstr-target_did-str",level:4},{value:"<em>async</em> credential_definition_id2schema_id(credential_definition_id)",id:"async-credential_definition_id2schema_idcredential_definition_id",level:4},{value:"<em>async</em> fetch_credential_definition(credential_definition_id: str)",id:"async-fetch_credential_definitioncredential_definition_id-str",level:4},{value:"<em>async</em> fetch_schema_by_id(schema_id: str)",id:"async-fetch_schema_by_idschema_id-str",level:4},{value:"<em>async</em> fetch_schema_by_seq_no(seq_no: int)",id:"async-fetch_schema_by_seq_noseq_no-int",level:4},{value:"<em>async</em> fetch_txn_author_agreement()",id:"async-fetch_txn_author_agreement",level:4},{value:"<em>async</em> get_all_endpoints_for_did(did: str)",id:"async-get_all_endpoints_for_diddid-str",level:4},{value:"<em>async</em> get_credential_definition(credential_definition_id: str)",id:"async-get_credential_definitioncredential_definition_id-str",level:4},{value:"<em>async</em> get_endpoint_for_did(did: str, endpoint_type: OptionalEndpointType = None)",id:"async-get_endpoint_for_diddid-str-endpoint_type-optionalendpointtype--none",level:4},{value:"<em>async</em> get_indy_storage()",id:"async-get_indy_storage",level:4},{value:"<em>async</em> get_key_for_did(did: str)",id:"async-get_key_for_diddid-str",level:4},{value:"<em>async</em> get_latest_txn_author_acceptance()",id:"async-get_latest_txn_author_acceptance",level:4},{value:"<em>async</em> get_nym_role(did: str)",id:"async-get_nym_roledid-str",level:4},{value:"<em>async</em> get_revoc_reg_def(revoc_reg_id: str)",id:"async-get_revoc_reg_defrevoc_reg_id-str",level:4},{value:"<em>async</em> get_revoc_reg_delta(revoc_reg_id: str, fro=0, to=None)",id:"async-get_revoc_reg_deltarevoc_reg_id-str-fro0-tonone",level:4},{value:"<em>async</em> get_revoc_reg_entry(revoc_reg_id: str, timestamp: int)",id:"async-get_revoc_reg_entryrevoc_reg_id-str-timestamp-int",level:4},{value:"<em>async</em> get_schema(schema_id: str)",id:"async-get_schemaschema_id-str",level:4},{value:"<em>async</em> get_txn_author_agreement(reload: bool = False)",id:"async-get_txn_author_agreementreload-bool--false",level:4},{value:"<em>async</em> get_wallet_public_did()",id:"async-get_wallet_public_did",level:4},{value:"<em>async</em> is_ledger_read_only()",id:"async-is_ledger_read_only",level:4},{value:"nym_to_did(nym: str)",id:"nym_to_didnym-str",level:4},{value:"<em>property</em> pool_handle()",id:"property-pool_handle",level:4},{value:"<em>property</em> pool<em>name(</em>: str",id:"property-poolname-str",level:4},{value:"<em>property</em> read<em>only(</em>: bool",id:"property-readonly-bool",level:4},{value:"<em>async</em> register_nym(did: str, verkey: str, alias: Optional[str] = None, role: Optional[str] = None, write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"async-register_nymdid-str-verkey-str-alias-optionalstr--none-role-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none",level:4},{value:"<em>async</em> rotate_public_did_keypair(next_seed: Optional[str] = None)",id:"async-rotate_public_did_keypairnext_seed-optionalstr--none",level:4},{value:"<em>async</em> send_revoc_reg_def(revoc_reg_def: dict, issuer_did: Optional[str] = None, write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"async-send_revoc_reg_defrevoc_reg_def-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none",level:4},{value:"<em>async</em> send_revoc_reg_entry(revoc_reg_id: str, revoc_def_type: str, revoc_reg_entry: dict, issuer_did: Optional[str] = None, write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"async-send_revoc_reg_entryrevoc_reg_id-str-revoc_def_type-str-revoc_reg_entry-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none",level:4},{value:"<em>async</em> submit_get_nym_request(request_json: str)",id:"async-submit_get_nym_requestrequest_json-str",level:4},{value:"taa_rough_timestamp()",id:"taa_rough_timestamp",level:4},{value:"<em>async</em> txn_endorse(request_json: str, endorse_did: Optional[DIDInfo] = None)",id:"async-txn_endorserequest_json-str-endorse_did-optionaldidinfo--none",level:4},{value:"<em>async</em> update_endpoint_for_did(did: str, endpoint: str, endpoint_type: OptionalEndpointType = None, write_ledger: bool = True, endorser_did: Optional[str] = None, routing_keys: Optional[List[str]] = None)",id:"async-update_endpoint_for_diddid-str-endpoint-str-endpoint_type-optionalendpointtype--none-write_ledger-bool--true-endorser_did-optionalstr--none-routing_keys-optionalliststr--none",level:4},{value:"<em>class</em> aries_cloudagent.ledger.indy.IndySdkLedgerPool(name: str, *, checked: bool = False, keepalive: int = 0, cache: Optional[BaseCache] = None, cache_duration: int = 600, genesis_transactions: Optional[str] = None, read_only: bool = False, socks_proxy: Optional[str] = None)",id:"class-aries_cloudagentledgerindyindysdkledgerpoolname-str--checked-bool--false-keepalive-int--0-cache-optionalbasecache--none-cache_duration-int--600-genesis_transactions-optionalstr--none-read_only-bool--false-socks_proxy-optionalstr--none",level:3},{value:"<em>async</em> check_pool_config()",id:"async-check_pool_config",level:4},{value:"<em>async</em> close()",id:"async-close",level:4},{value:"<em>async</em> context_close()",id:"async-context_close",level:4},{value:"<em>async</em> context_open()",id:"async-context_open",level:4},{value:"<em>async</em> create_pool_config(genesis_transactions: str, recreate: bool = False)",id:"async-create_pool_configgenesis_transactions-str-recreate-bool--false",level:4},{value:"<em>property</em> genesis<em>txns(</em>: str",id:"property-genesistxns-str",level:4},{value:"<em>async</em> open()",id:"async-open",level:4},{value:"<em>class</em> aries_cloudagent.ledger.indy.IndySdkLedgerPoolProvider()",id:"class-aries_cloudagentledgerindyindysdkledgerpoolprovider",level:3},{value:"provide(settings: BaseSettings, injector: BaseInjector)",id:"providesettings-basesettings-injector-baseinjector",level:4},{value:"aries_cloudagent.ledger.indy_vdr module",id:"aries_cloudagentledgerindy_vdr-module",level:2},{value:"<em>class</em> aries_cloudagent.ledger.indy_vdr.IndyVdrLedger(pool: IndyVdrLedgerPool, profile: Profile)",id:"class-aries_cloudagentledgerindy_vdrindyvdrledgerpool-indyvdrledgerpool-profile-profile",level:3},{value:"BACKEND<em>NAME(</em>: str(https://docs.python.org/3/library/stdtypes.html#str_ <em> = &#39;indy-vdr</em> )",id:"backendname-strhttpsdocspythonorg3librarystdtypeshtmlstr_---indy-vdr-",level:4},{value:"<em>async</em> accept_txn_author_agreement(taa_record: dict, mechanism: str, accept_time: Optional[int] = None)",id:"async-accept_txn_author_agreementtaa_record-dict-mechanism-str-accept_time-optionalint--none-1",level:4},{value:"<em>async</em> build_and_return_get_nym_request(submitter_did: Optional[str], target_did: str)",id:"async-build_and_return_get_nym_requestsubmitter_did-optionalstr-target_did-str-1",level:4},{value:"<em>async</em> credential_definition_id2schema_id(credential_definition_id)",id:"async-credential_definition_id2schema_idcredential_definition_id-1",level:4},{value:"<em>async</em> fetch_credential_definition(credential_definition_id: str)",id:"async-fetch_credential_definitioncredential_definition_id-str-1",level:4},{value:"<em>async</em> fetch_schema_by_id(schema_id: str)",id:"async-fetch_schema_by_idschema_id-str-1",level:4},{value:"<em>async</em> fetch_schema_by_seq_no(seq_no: int)",id:"async-fetch_schema_by_seq_noseq_no-int-1",level:4},{value:"<em>async</em> fetch_txn_author_agreement()",id:"async-fetch_txn_author_agreement-1",level:4},{value:"<em>async</em> get_all_endpoints_for_did(did: str)",id:"async-get_all_endpoints_for_diddid-str-1",level:4},{value:"<em>async</em> get_credential_definition(credential_definition_id: str)",id:"async-get_credential_definitioncredential_definition_id-str-1",level:4},{value:"<em>async</em> get_endpoint_for_did(did: str, endpoint_type: OptionalEndpointType = None)",id:"async-get_endpoint_for_diddid-str-endpoint_type-optionalendpointtype--none-1",level:4},{value:"<em>async</em> get_key_for_did(did: str)",id:"async-get_key_for_diddid-str-1",level:4},{value:"<em>async</em> get_latest_txn_author_acceptance()",id:"async-get_latest_txn_author_acceptance-1",level:4},{value:"<em>async</em> get_nym_role(did: str)",id:"async-get_nym_roledid-str-1",level:4},{value:"<em>async</em> get_revoc_reg_def(revoc_reg_id: str)",id:"async-get_revoc_reg_defrevoc_reg_id-str-1",level:4},{value:"<em>async</em> get_revoc_reg_delta(revoc_reg_id: str, timestamp_from=0, timestamp_to=None)",id:"async-get_revoc_reg_deltarevoc_reg_id-str-timestamp_from0-timestamp_tonone",level:4},{value:"<em>async</em> get_revoc_reg_entry(revoc_reg_id: str, timestamp: int)",id:"async-get_revoc_reg_entryrevoc_reg_id-str-timestamp-int-1",level:4},{value:"<em>async</em> get_schema(schema_id: str)",id:"async-get_schemaschema_id-str-1",level:4},{value:"<em>async</em> get_txn_author_agreement(reload: bool = False)",id:"async-get_txn_author_agreementreload-bool--false-1",level:4},{value:"<em>async</em> get_wallet_public_did()",id:"async-get_wallet_public_did-1",level:4},{value:"<em>async</em> is_ledger_read_only()",id:"async-is_ledger_read_only-1",level:4},{value:"nym_to_did(nym: str)",id:"nym_to_didnym-str-1",level:4},{value:"<em>property</em> pool_handle()",id:"property-pool_handle-1",level:4},{value:"<em>property</em> pool<em>name(</em>: str",id:"property-poolname-str-1",level:4},{value:"<em>property</em> read<em>only(</em>: bool",id:"property-readonly-bool-1",level:4},{value:"<em>async</em> register_nym(did: str, verkey: str, alias: Optional[str] = None, role: Optional[str] = None, write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"async-register_nymdid-str-verkey-str-alias-optionalstr--none-role-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none-1",level:4},{value:"<em>async</em> rotate_public_did_keypair(next_seed: Optional[str] = None)",id:"async-rotate_public_did_keypairnext_seed-optionalstr--none-1",level:4},{value:"<em>async</em> send_revoc_reg_def(revoc_reg_def: dict, issuer_did: Optional[str] = None, write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"async-send_revoc_reg_defrevoc_reg_def-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none-1",level:4},{value:"<em>async</em> send_revoc_reg_entry(revoc_reg_id: str, revoc_def_type: str, revoc_reg_entry: dict, issuer_did: Optional[str] = None, write_ledger: bool = True, endorser_did: Optional[str] = None)",id:"async-send_revoc_reg_entryrevoc_reg_id-str-revoc_def_type-str-revoc_reg_entry-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none-1",level:4},{value:"<em>async</em> submit_get_nym_request(request_json: str)",id:"async-submit_get_nym_requestrequest_json-str-1",level:4},{value:"taa_rough_timestamp()",id:"taa_rough_timestamp-1",level:4},{value:"<em>async</em> txn_endorse(request_json: str, endorse_did: Optional[DIDInfo] = None)",id:"async-txn_endorserequest_json-str-endorse_did-optionaldidinfo--none-1",level:4},{value:"<em>async</em> update_endpoint_for_did(did: str, endpoint: str, endpoint_type: OptionalEndpointType = None, write_ledger: bool = True, endorser_did: Optional[str] = None, routing_keys: Optional[List[str]] = None)",id:"async-update_endpoint_for_diddid-str-endpoint-str-endpoint_type-optionalendpointtype--none-write_ledger-bool--true-endorser_did-optionalstr--none-routing_keys-optionalliststr--none-1",level:4},{value:"<em>class</em> aries_cloudagent.ledger.indy_vdr.IndyVdrLedgerPool(name: str, *, keepalive: int = 0, cache: Optional[BaseCache] = None, cache_duration: int = 600, genesis_transactions: Optional[str] = None, read_only: bool = False, socks_proxy: Optional[str] = None)",id:"class-aries_cloudagentledgerindy_vdrindyvdrledgerpoolname-str--keepalive-int--0-cache-optionalbasecache--none-cache_duration-int--600-genesis_transactions-optionalstr--none-read_only-bool--false-socks_proxy-optionalstr--none",level:3},{value:"<em>property</em> cfg<em>path(</em>: Path",id:"property-cfgpath-path",level:4},{value:"<em>async</em> close()",id:"async-close-1",level:4},{value:"<em>async</em> context_close()",id:"async-context_close-1",level:4},{value:"<em>async</em> context_open()",id:"async-context_open-1",level:4},{value:"<em>async</em> create_pool_config(genesis_transactions: str, recreate: bool = False)",id:"async-create_pool_configgenesis_transactions-str-recreate-bool--false-1",level:4},{value:"<em>property</em> genesis<em>hash(</em>: str",id:"property-genesishash-str",level:4},{value:"<em>property</em> genesis<em>txns(</em>: str",id:"property-genesistxns-str-1",level:4},{value:"<em>async</em> open()",id:"async-open-1",level:4},{value:"aries_cloudagent.ledger.routes module",id:"aries_cloudagentledgerroutes-module",level:2},{value:"aries_cloudagent.ledger.util module",id:"aries_cloudagentledgerutil-module",level:2},{value:"<em>async</em> aries_cloudagent.ledger.util.notify_register_did_event(profile: Profile, did: str, meta_data: dict)",id:"async-aries_cloudagentledgerutilnotify_register_did_eventprofile-profile-did-str-meta_data-dict",level:3}],p={toc:d},m="wrapper";function c(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"aries_cloudagentledger-package"},"aries_cloudagent.ledger package"),(0,n.kt)("h2",{id:"subpackages"},"Subpackages"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation"},"aries_cloudagent.ledger.merkel_validation package")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#submodules"},"Submodules"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#module-aries_cloudagent.ledger.merkel_validation.constants"},"aries_cloudagent.ledger.merkel_validation.constants module"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#module-aries_cloudagent.ledger.merkel_validation.domain_txn_handler"},"aries_cloudagent.ledger.merkel_validation.domain_txn_handler module")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.decode_state_value"},(0,n.kt)("inlineCode",{parentName:"a"},"decode_state_value()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.encode_state_value"},(0,n.kt)("inlineCode",{parentName:"a"},"encode_state_value()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.extract_params_write_request"},(0,n.kt)("inlineCode",{parentName:"a"},"extract_params_write_request()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.get_proof_nodes"},(0,n.kt)("inlineCode",{parentName:"a"},"get_proof_nodes()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.hash_of"},(0,n.kt)("inlineCode",{parentName:"a"},"hash_of()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.make_state_path_for_attr"},(0,n.kt)("inlineCode",{parentName:"a"},"make_state_path_for_attr()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.make_state_path_for_claim_def"},(0,n.kt)("inlineCode",{parentName:"a"},"make_state_path_for_claim_def()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.make_state_path_for_nym"},(0,n.kt)("inlineCode",{parentName:"a"},"make_state_path_for_nym()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.make_state_path_for_revoc_def"},(0,n.kt)("inlineCode",{parentName:"a"},"make_state_path_for_revoc_def()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.make_state_path_for_revoc_reg_entry"},(0,n.kt)("inlineCode",{parentName:"a"},"make_state_path_for_revoc_reg_entry()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.make_state_path_for_revoc_reg_entry_accum"},(0,n.kt)("inlineCode",{parentName:"a"},"make_state_path_for_revoc_reg_entry_accum()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.make_state_path_for_schema"},(0,n.kt)("inlineCode",{parentName:"a"},"make_state_path_for_schema()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.parse_attr_txn"},(0,n.kt)("inlineCode",{parentName:"a"},"parse_attr_txn()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_attr_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_attr_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_claim_def_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_claim_def_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_for_state_read"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_for_state_read()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_for_state_write"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_for_state_write()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_get_attr_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_get_attr_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_get_claim_def_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_get_claim_def_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_get_nym_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_get_nym_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_get_revoc_def_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_get_revoc_def_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_get_revoc_reg_delta_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_get_revoc_reg_delta_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_get_revoc_reg_entry_accum_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_get_revoc_reg_entry_accum_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_get_revoc_reg_entry_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_get_revoc_reg_entry_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_get_schema_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_get_schema_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_nym_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_nym_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_revoc_def_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_revoc_def_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_revoc_reg_entry_accum_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_revoc_reg_entry_accum_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_revoc_reg_entry_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_revoc_reg_entry_for_state()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.domain_txn_handler.prepare_schema_for_state"},(0,n.kt)("inlineCode",{parentName:"a"},"prepare_schema_for_state()")))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#module-aries_cloudagent.ledger.merkel_validation.hasher"},"aries_cloudagent.ledger.merkel_validation.hasher module")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.hasher.HexTreeHasher"},(0,n.kt)("inlineCode",{parentName:"a"},"HexTreeHasher"))),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.hasher.HexTreeHasher.hash_children"},(0,n.kt)("inlineCode",{parentName:"a"},"HexTreeHasher.hash_children()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.hasher.HexTreeHasher.hash_leaf"},(0,n.kt)("inlineCode",{parentName:"a"},"HexTreeHasher.hash_leaf()")))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.hasher.TreeHasher"},(0,n.kt)("inlineCode",{parentName:"a"},"TreeHasher"))),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.hasher.TreeHasher.hash_children"},(0,n.kt)("inlineCode",{parentName:"a"},"TreeHasher.hash_children()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.hasher.TreeHasher.hash_leaf"},(0,n.kt)("inlineCode",{parentName:"a"},"TreeHasher.hash_leaf()")))))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#module-aries_cloudagent.ledger.merkel_validation.merkel_verifier"},"aries_cloudagent.ledger.merkel_validation.merkel_verifier module")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.merkel_verifier.MerkleVerifier"},(0,n.kt)("inlineCode",{parentName:"a"},"MerkleVerifier"))),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.merkel_verifier.MerkleVerifier.calculate_root_hash"},(0,n.kt)("inlineCode",{parentName:"a"},"MerkleVerifier.calculate_root_hash()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.merkel_verifier.MerkleVerifier.lsb"},(0,n.kt)("inlineCode",{parentName:"a"},"MerkleVerifier.lsb()")))))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#module-aries_cloudagent.ledger.merkel_validation.trie"},"aries_cloudagent.ledger.merkel_validation.trie module")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.trie.SubTrie"},(0,n.kt)("inlineCode",{parentName:"a"},"SubTrie"))),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.trie.SubTrie.get_new_trie_with_proof_nodes"},(0,n.kt)("inlineCode",{parentName:"a"},"SubTrie.get_new_trie_with_proof_nodes()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.trie.SubTrie.root_hash"},(0,n.kt)("inlineCode",{parentName:"a"},"SubTrie.root_hash")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.trie.SubTrie.set_root_hash"},(0,n.kt)("inlineCode",{parentName:"a"},"SubTrie.set_root_hash()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.trie.SubTrie.verify_spv_proof"},(0,n.kt)("inlineCode",{parentName:"a"},"SubTrie.verify_spv_proof()")))))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#module-aries_cloudagent.ledger.merkel_validation.utils"},"aries_cloudagent.ledger.merkel_validation.utils module")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.utils.ascii_chr"},(0,n.kt)("inlineCode",{parentName:"a"},"ascii_chr()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.utils.audit_path_length"},(0,n.kt)("inlineCode",{parentName:"a"},"audit_path_length()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.utils.bin_to_nibbles"},(0,n.kt)("inlineCode",{parentName:"a"},"bin_to_nibbles()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.utils.encode_hex"},(0,n.kt)("inlineCode",{parentName:"a"},"encode_hex()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.utils.sha3_256"},(0,n.kt)("inlineCode",{parentName:"a"},"sha3_256()")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.merkel_validation#aries_cloudagent.ledger.merkel_validation.utils.unpack_to_nibbles"},(0,n.kt)("inlineCode",{parentName:"a"},"unpack_to_nibbles()")))))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.multiple_ledger"},"aries_cloudagent.ledger.multiple_ledger package")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.multiple_ledger#submodules"},"Submodules"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.multiple_ledger#aries-cloudagent-ledger-multiple-ledger-base-manager-module"},"aries_cloudagent.ledger.multiple_ledger.base_manager module"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.multiple_ledger#aries-cloudagent-ledger-multiple-ledger-indy-manager-module"},"aries_cloudagent.ledger.multiple_ledger.indy_manager module"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.multiple_ledger#aries-cloudagent-ledger-multiple-ledger-indy-vdr-manager-module"},"aries_cloudagent.ledger.multiple_ledger.indy_vdr_manager module"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.multiple_ledger#aries-cloudagent-ledger-multiple-ledger-ledger-config-schema-module"},"aries_cloudagent.ledger.multiple_ledger.ledger_config_schema module"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.multiple_ledger#aries-cloudagent-ledger-multiple-ledger-ledger-requests-executor-module"},"aries_cloudagent.ledger.multiple_ledger.ledger_requests_executor module"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.ledger.multiple_ledger#aries-cloudagent-ledger-multiple-ledger-manager-provider-module"},"aries_cloudagent.ledger.multiple_ledger.manager_provider module")))))),(0,n.kt)("h2",{id:"submodules"},"Submodules"),(0,n.kt)("h2",{id:"aries_cloudagentledgerbase-module"},"aries_cloudagent.ledger.base module"),(0,n.kt)("p",null,"Ledger base class."),(0,n.kt)("h3",{id:"class-aries_cloudagentledgerbasebaseledger"},(0,n.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.ledger.base.BaseLedger()"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/abc.html#abc.ABC"},(0,n.kt)("inlineCode",{parentName:"a"},"ABC"))),(0,n.kt)("p",null,"Base class for ledger."),(0,n.kt)("h4",{id:"backendname-strhttpsdocspythonorg3librarystdtypeshtmlstr_---non-"},"BACKEND",(0,n.kt)("em",{parentName:"h4"},"NAME("),": ","[str]","(",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"https://docs.python.org/3/library/stdtypes.html#str"),"_ ",(0,n.kt)("em",{parentName:"h4"}," = Non")," )"),(0,n.kt)("h4",{id:"abstract-async-accept_txn_author_agreementtaa_record-dict-mechanism-str-accept_time-optionalint--none"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," accept_txn_author_agreement(taa_record: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),", mechanism: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", accept_time: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#int"},"int"),"] = None)"),(0,n.kt)("p",null,"Save a new record recording the acceptance of the TAA."),(0,n.kt)("h4",{id:"property-backend-strhttpsdocspythonorg3librarystdtypeshtmlstr-"},(0,n.kt)("em",{parentName:"h4"},"property")," backend(",(0,n.kt)("em",{parentName:"h4"},": ","[str]","(",(0,n.kt)("a",{parentName:"em",href:"https://docs.python.org/3/library/stdtypes.html#str"},"https://docs.python.org/3/library/stdtypes.html#str"))," )"),(0,n.kt)("p",null,"Accessor for the ledger backend name."),(0,n.kt)("h4",{id:"async-check_existing_schemapublic_did-str-schema_name-str-schema_version-str-attribute_names-sequencestr"},(0,n.kt)("em",{parentName:"h4"},"async")," check_existing_schema(public_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", schema_name: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", schema_version: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", attribute_names: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Sequence"},"Sequence"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"])"),(0,n.kt)("p",null,"Check if a schema has already been published."),(0,n.kt)("h4",{id:"async-create_and_send_credential_definitionissuer-indyissuer-schema_id-str-signature_type-optionalstr--none-tag-optionalstr--none-support_revocation-bool--false-write_ledger-bool--true-endorser_did-optionalstr--none"},(0,n.kt)("em",{parentName:"h4"},"async")," create_and_send_credential_definition(issuer: ",(0,n.kt)("a",{parentName:"h4",href:"/aries-acapy-docs/code/generated/aries_cloudagent.indy#aries_cloudagent.indy.issuer.IndyIssuer"},"IndyIssuer"),", schema_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", signature_type: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, tag: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, support_revocation: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = False, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Send credential definition to ledger and store relevant key matter in wallet."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"issuer")," \u2013 The issuer instance to use for credential definition creation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"schema_id")," \u2013 The schema id of the schema to create cred def for")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"signature_type")," \u2013 The signature type to use on the credential definition")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"tag")," \u2013 Optional tag to distinguish multiple credential definitions")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"support_revocation")," \u2013 Optional flag to enable revocation for this cred def")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("p",{parentName:"li"},"Tuple with cred def id, cred def structure, and whether it\u2019s novel"))),(0,n.kt)("h4",{id:"async-create_and_send_schemaissuer-indyissuer-schema_name-str-schema_version-str-attribute_names-sequencestr-write_ledger-bool--true-endorser_did-optionalstr--none"},(0,n.kt)("em",{parentName:"h4"},"async")," create_and_send_schema(issuer: ",(0,n.kt)("a",{parentName:"h4",href:"/aries-acapy-docs/code/generated/aries_cloudagent.indy#aries_cloudagent.indy.issuer.IndyIssuer"},"IndyIssuer"),", schema_name: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", schema_version: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", attribute_names: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Sequence"},"Sequence"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"], write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Send schema to ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"issuer")," \u2013 The issuer instance to use for schema creation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"schema_name")," \u2013 The schema name")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"schema_version")," \u2013 The schema version")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"attribute_names")," \u2013 A list of schema attributes"))))),(0,n.kt)("h4",{id:"did_to_nymdid-str"},"did_to_nym(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Remove the ledger\u2019s DID prefix to produce a nym."),(0,n.kt)("h4",{id:"abstract-async-fetch_schema_by_idschema_id-str"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," fetch_schema_by_id(schema_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get schema from ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"schema_id")," \u2013 The schema id (or stringified sequence number) to retrieve")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("p",{parentName:"li"},"Indy schema dict"))),(0,n.kt)("h4",{id:"abstract-async-fetch_schema_by_seq_noseq_no-int"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," fetch_schema_by_seq_no(seq_no: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#int"},"int"),")"),(0,n.kt)("p",null,"Fetch a schema by its sequence number."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"seq_no")," \u2013 schema ledger sequence number")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("p",{parentName:"li"},"Indy schema dict"))),(0,n.kt)("h4",{id:"abstract-async-fetch_txn_author_agreement"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," fetch_txn_author_agreement()"),(0,n.kt)("p",null,"Fetch the current AML and TAA from the ledger."),(0,n.kt)("h4",{id:"abstract-async-get_all_endpoints_for_diddid-str"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_all_endpoints_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Fetch all endpoints for a ledger DID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The DID to look up on the ledger or in the cache"))),(0,n.kt)("h4",{id:"abstract-async-get_credential_definitioncredential_definition_id-str"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_credential_definition(credential_definition_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get a credential definition from the cache if available, otherwise the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"credential_definition_id")," \u2013 The schema id of the schema to fetch cred def for"))),(0,n.kt)("h4",{id:"abstract-async-get_endpoint_for_diddid-str-endpoint_type-endpointtype--endpointtypeendpoint"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_endpoint_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endpoint_type: EndpointType = EndpointType.ENDPOINT)"),(0,n.kt)("p",null,"Fetch the endpoint for a ledger DID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The DID to look up on the ledger or in the cache")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"endpoint_type")," \u2013 The type of the endpoint (default \u2018endpoint\u2019)"))))),(0,n.kt)("h4",{id:"abstract-async-get_key_for_diddid-str"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_key_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Fetch the verkey for a ledger DID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The DID to look up on the ledger or in the cache"))),(0,n.kt)("h4",{id:"abstract-async-get_latest_txn_author_acceptance"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_latest_txn_author_acceptance()"),(0,n.kt)("p",null,"Look up the latest TAA acceptance."),(0,n.kt)("h4",{id:"abstract-async-get_nym_roledid-str"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_nym_role(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Return the role registered to input public DID on the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 DID to register on the ledger."))),(0,n.kt)("h4",{id:"abstract-async-get_revoc_reg_defrevoc_reg_id-str"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_revoc_reg_def(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Look up a revocation registry definition by ID."),(0,n.kt)("h4",{id:"abstract-async-get_revoc_reg_deltarevoc_reg_id-str-timestamp_from0-timestamp_tonone"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_revoc_reg_delta(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", timestamp_from=0, timestamp_to=None)"),(0,n.kt)("p",null,"Look up a revocation registry delta by ID."),(0,n.kt)("h4",{id:"abstract-async-get_revoc_reg_entryrevoc_reg_id-str-timestamp-int"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_revoc_reg_entry(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", timestamp: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#int"},"int"),")"),(0,n.kt)("p",null,"Get revocation registry entry by revocation registry ID and timestamp."),(0,n.kt)("h4",{id:"abstract-async-get_schemaschema_id-str"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_schema(schema_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get a schema from the cache if available, otherwise fetch from the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"schema_id")," \u2013 The schema id (or stringified sequence number) to retrieve"))),(0,n.kt)("h4",{id:"abstract-async-get_txn_author_agreementreload-bool--false"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_txn_author_agreement(reload: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = False)"),(0,n.kt)("p",null,"Get the current transaction author agreement, fetching it if necessary."),(0,n.kt)("h4",{id:"abstract-async-get_wallet_public_did"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," get_wallet_public_did()"),(0,n.kt)("p",null,"Fetch the public DID from the wallet."),(0,n.kt)("h4",{id:"abstract-async-is_ledger_read_only"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," is_ledger_read_only()"),(0,n.kt)("p",null,"Check if ledger is read-only including TAA."),(0,n.kt)("h4",{id:"abstract-nym_to_didnym-str"},(0,n.kt)("em",{parentName:"h4"},"abstract")," nym_to_did(nym: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Format a nym with the ledger\u2019s DID prefix."),(0,n.kt)("h4",{id:"abstract-property-readonly-bool"},(0,n.kt)("em",{parentName:"h4"},"abstract property")," read",(0,n.kt)("em",{parentName:"h4"},"only("),": ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool_"},"bool")),(0,n.kt)("p",null,"Accessor for the ledger read-only flag."),(0,n.kt)("h4",{id:"abstract-async-register_nymdid-str-verkey-str-alias-optionalstr--none-role-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," register_nym(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", verkey: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", alias: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, role: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Register a nym on the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 DID to register on the ledger.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"verkey")," \u2013 The verification key of the keypair.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"alias")," \u2013 Human-friendly alias to assign to the DID.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"role")," \u2013 For permissioned ledgers, what role should the new DID have."))))),(0,n.kt)("h4",{id:"abstract-async-rotate_public_did_keypairnext_seed-optionalstr--none"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," rotate_public_did_keypair(next_seed: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Rotate keypair for public DID: create new key, submit to ledger, update wallet."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"next_seed")," \u2013 seed for incoming ed25519 keypair (default random)"))),(0,n.kt)("h4",{id:"abstract-async-send_revoc_reg_defrevoc_reg_def-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," send_revoc_reg_def(revoc_reg_def: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),", issuer_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Publish a revocation registry definition to the ledger."),(0,n.kt)("h4",{id:"abstract-async-send_revoc_reg_entryrevoc_reg_id-str-revoc_def_type-str-revoc_reg_entry-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," send_revoc_reg_entry(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", revoc_def_type: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", revoc_reg_entry: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),", issuer_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Publish a revocation registry entry to the ledger."),(0,n.kt)("h4",{id:"taa_digestversion-str-text-str"},"taa_digest(version: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", text: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Generate the digest of a TAA record."),(0,n.kt)("h4",{id:"abstract-async-txn_endorserequest_json-str-endorse_did-optionaldidinfo--none"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," txn_endorse(request_json: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endorse_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"/aries-acapy-docs/code/generated/aries_cloudagent.wallet#aries_cloudagent.wallet.did_info.DIDInfo"},"DIDInfo"),"] = None)"),(0,n.kt)("p",null,"Endorse (sign) the provided transaction."),(0,n.kt)("h4",{id:"abstract-async-update_endpoint_for_diddid-str-endpoint-str-endpoint_type-endpointtype--endpointtypeendpoint-write_ledger-bool--true-endorser_did-optionalstr--none-routing_keys-optionalliststr--none"},(0,n.kt)("em",{parentName:"h4"},"abstract async")," update_endpoint_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endpoint: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endpoint_type: EndpointType = EndpointType.ENDPOINT, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, routing_keys: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"]] = None)"),(0,n.kt)("p",null,"Check and update the endpoint on the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The ledger DID")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"endpoint")," \u2013 The endpoint address")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"endpoint_type")," \u2013 The type of the endpoint (default \u2018endpoint\u2019)"))))),(0,n.kt)("h3",{id:"class-aries_cloudagentledgerbaserolevalue"},(0,n.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.ledger.base.Role(value)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/enum.html#enum.Enum"},(0,n.kt)("inlineCode",{parentName:"a"},"Enum"))),(0,n.kt)("p",null,"Enum for indy roles."),(0,n.kt)("h4",{id:"endorser--101-"},"ENDORSER(",(0,n.kt)("em",{parentName:"h4"}," = (101,")," )"),(0,n.kt)("h4",{id:"networkmonitor--201_-"},"NETWORK",(0,n.kt)("em",{parentName:"h4"},"MONITOR(")," = (201,","_"," )"),(0,n.kt)("h4",{id:"roleremove--_-"},"ROLE",(0,n.kt)("em",{parentName:"h4"},"REMOVE(")," = ('',","_"," )"),(0,n.kt)("h4",{id:"steward--2-"},"STEWARD(",(0,n.kt)("em",{parentName:"h4"}," = (2,")," )"),(0,n.kt)("h4",{id:"trustee--0-"},"TRUSTEE(",(0,n.kt)("em",{parentName:"h4"}," = (0,")," )"),(0,n.kt)("h4",{id:"user--none--"},"USER(",(0,n.kt)("em",{parentName:"h4"}," = (None, ''")," )"),(0,n.kt)("h4",{id:"static-gettoken-optionalunionstr-int--none"},(0,n.kt)("em",{parentName:"h4"},"static")," get(token: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Union"},"Union"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#int"},"int"),"]] = None)"),(0,n.kt)("p",null,"Return enum instance corresponding to input token."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"token")," \u2013 token identifying role to indy-sdk:\n\u201cSTEWARD\u201d, \u201cTRUSTEE\u201d, \u201cENDORSER\u201d, \u201c\u201d or None"))),(0,n.kt)("h4",{id:"to_indy_num_str"},"to_indy_num_str()"),(0,n.kt)("p",null,"Return (typically, numeric) string value that indy-sdk associates with role."),(0,n.kt)("p",null,"Recall that None signifies USER and \u201c\u201d signifies a role undergoing reset."),(0,n.kt)("h4",{id:"token"},"token()"),(0,n.kt)("p",null,"Return token identifying role to indy-sdk."),(0,n.kt)("h2",{id:"aries_cloudagentledgerendpoint_type-module"},"aries_cloudagent.ledger.endpoint_type module"),(0,n.kt)("p",null,"Ledger utilities."),(0,n.kt)("h3",{id:"class-aries_cloudagentledgerendpoint_typeendpointtypevalue"},(0,n.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.ledger.endpoint_type.EndpointType(value)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/enum.html#enum.Enum"},(0,n.kt)("inlineCode",{parentName:"a"},"Enum"))),(0,n.kt)("p",null,"Enum for endpoint/service types."),(0,n.kt)("h4",{id:"endpoint--endpointtypenamew3cendpoint-indyendpoint-"},"ENDPOINT(",(0,n.kt)("em",{parentName:"h4"}," = EndpointTypeName(w3c='Endpoint', indy='endpoint'")," )"),(0,n.kt)("h4",{id:"linkeddomains--endpointtypenamew3clinkeddomains-indylinkeddomains-"},"LINKED",(0,n.kt)("em",{parentName:"h4"},"DOMAINS(")," = EndpointTypeName(w3c='LinkedDomains', indy='linked",(0,n.kt)("em",{parentName:"h4"},"domains'")," )"),(0,n.kt)("h4",{id:"profile--endpointtypenamew3cprofile-indyprofile-"},"PROFILE(",(0,n.kt)("em",{parentName:"h4"}," = EndpointTypeName(w3c='Profile', indy='profile'")," )"),(0,n.kt)("h4",{id:"static-getname-str"},(0,n.kt)("em",{parentName:"h4"},"static")," get(name: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Return enum instance corresponding to input string."),(0,n.kt)("h4",{id:"property-indy"},(0,n.kt)("em",{parentName:"h4"},"property")," indy()"),(0,n.kt)("p",null,"internally-facing, on ledger and in wallet."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Type")),(0,n.kt)("p",{parentName:"li"},"Indy name of endpoint type"))),(0,n.kt)("h4",{id:"property-w3c"},(0,n.kt)("em",{parentName:"h4"},"property")," w3c()"),(0,n.kt)("p",null,"externally-facing."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Type")),(0,n.kt)("p",{parentName:"li"},"W3C name of endpoint type"))),(0,n.kt)("h3",{id:"class-aries_cloudagentledgerendpoint_typeendpointtypenamew3c-indy"},(0,n.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.ledger.endpoint_type.EndpointTypeName(w3c, indy)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/stdtypes.html#tuple"},(0,n.kt)("inlineCode",{parentName:"a"},"tuple"))),(0,n.kt)("h4",{id:"property-indy-1"},(0,n.kt)("em",{parentName:"h4"},"property")," indy()"),(0,n.kt)("p",null,"Alias for field number 1"),(0,n.kt)("h4",{id:"property-w3c-1"},(0,n.kt)("em",{parentName:"h4"},"property")," w3c()"),(0,n.kt)("p",null,"Alias for field number 0"),(0,n.kt)("h2",{id:"aries_cloudagentledgererror-module"},"aries_cloudagent.ledger.error module"),(0,n.kt)("p",null,"Ledger related errors."),(0,n.kt)("h3",{id:"exception-aries_cloudagentledgererrorbadledgerrequesterrorargs-error_code-optionalstr--none-kwargs"},(0,n.kt)("em",{parentName:"h3"},"exception")," aries_cloudagent.ledger.error.BadLedgerRequestError(","*","args, error_code: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, ","*","*","kwargs)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("inlineCode",{parentName:"p"},"LedgerError")),(0,n.kt)("p",null,"The current request cannot proceed."),(0,n.kt)("h3",{id:"exception-aries_cloudagentledgererrorclosedpoolerrorargs-error_code-optionalstr--none-kwargs"},(0,n.kt)("em",{parentName:"h3"},"exception")," aries_cloudagent.ledger.error.ClosedPoolError(","*","args, error_code: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, ","*","*","kwargs)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("inlineCode",{parentName:"p"},"LedgerError")),(0,n.kt)("p",null,"Indy pool is closed."),(0,n.kt)("h3",{id:"exception-aries_cloudagentledgererrorledgerconfigerrorargs-error_code-optionalstr--none-kwargs"},(0,n.kt)("em",{parentName:"h3"},"exception")," aries_cloudagent.ledger.error.LedgerConfigError(","*","args, error_code: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, ","*","*","kwargs)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("inlineCode",{parentName:"p"},"LedgerError")),(0,n.kt)("p",null,"Base class for ledger configuration errors."),(0,n.kt)("h3",{id:"exception-aries_cloudagentledgererrorledgererrorargs-error_code-optionalstr--none-kwargs"},(0,n.kt)("em",{parentName:"h3"},"exception")," aries_cloudagent.ledger.error.LedgerError(","*","args, error_code: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, ","*","*","kwargs)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.core#aries_cloudagent.core.error.BaseError"},(0,n.kt)("inlineCode",{parentName:"a"},"BaseError"))),(0,n.kt)("p",null,"Base class for ledger errors."),(0,n.kt)("h3",{id:"exception-aries_cloudagentledgererrorledgertransactionerrorargs-error_code-optionalstr--none-kwargs"},(0,n.kt)("em",{parentName:"h3"},"exception")," aries_cloudagent.ledger.error.LedgerTransactionError(","*","args, error_code: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, ","*","*","kwargs)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("inlineCode",{parentName:"p"},"LedgerError")),(0,n.kt)("p",null,"The ledger rejected the transaction."),(0,n.kt)("h2",{id:"aries_cloudagentledgerindy-module"},"aries_cloudagent.ledger.indy module"),(0,n.kt)("p",null,"Indy ledger implementation."),(0,n.kt)("h3",{id:"class-aries_cloudagentledgerindyindysdkledgerpool-indysdkledgerpool-profile-indysdkprofile"},(0,n.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.ledger.indy.IndySdkLedger(pool: IndySdkLedgerPool, profile: IndySdkProfile)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("inlineCode",{parentName:"p"},"BaseLedger")),(0,n.kt)("p",null,"Indy ledger class."),(0,n.kt)("h4",{id:"backendname-strhttpsdocspythonorg3librarystdtypeshtmlstr_---indy-"},"BACKEND",(0,n.kt)("em",{parentName:"h4"},"NAME("),": ","[str]","(",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"https://docs.python.org/3/library/stdtypes.html#str"),"_ ",(0,n.kt)("em",{parentName:"h4"}," = 'indy")," )"),(0,n.kt)("h4",{id:"async-accept_txn_author_agreementtaa_record-dict-mechanism-str-accept_time-optionalint--none"},(0,n.kt)("em",{parentName:"h4"},"async")," accept_txn_author_agreement(taa_record: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),", mechanism: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", accept_time: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#int"},"int"),"] = None)"),(0,n.kt)("p",null,"Save a new record recording the acceptance of the TAA."),(0,n.kt)("h4",{id:"async-build_and_return_get_nym_requestsubmitter_did-optionalstr-target_did-str"},(0,n.kt)("em",{parentName:"h4"},"async")," build_and_return_get_nym_request(submitter_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"], target_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Build GET_NYM request and return request_json."),(0,n.kt)("h4",{id:"async-credential_definition_id2schema_idcredential_definition_id"},(0,n.kt)("em",{parentName:"h4"},"async")," credential_definition_id2schema_id(credential_definition_id)"),(0,n.kt)("p",null,"From a credential definition, get the identifier for its schema."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"credential_definition_id")," \u2013 The identifier of the credential definition\nfrom which to identify a schema"))),(0,n.kt)("h4",{id:"async-fetch_credential_definitioncredential_definition_id-str"},(0,n.kt)("em",{parentName:"h4"},"async")," fetch_credential_definition(credential_definition_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get a credential definition from the ledger by id."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"credential_definition_id")," \u2013 The cred def id of the cred def to fetch"))),(0,n.kt)("h4",{id:"async-fetch_schema_by_idschema_id-str"},(0,n.kt)("em",{parentName:"h4"},"async")," fetch_schema_by_id(schema_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get schema from ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"schema_id")," \u2013 The schema id (or stringified sequence number) to retrieve")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("p",{parentName:"li"},"Indy schema dict"))),(0,n.kt)("h4",{id:"async-fetch_schema_by_seq_noseq_no-int"},(0,n.kt)("em",{parentName:"h4"},"async")," fetch_schema_by_seq_no(seq_no: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#int"},"int"),")"),(0,n.kt)("p",null,"Fetch a schema by its sequence number."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"seq_no")," \u2013 schema ledger sequence number")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("p",{parentName:"li"},"Indy schema dict"))),(0,n.kt)("h4",{id:"async-fetch_txn_author_agreement"},(0,n.kt)("em",{parentName:"h4"},"async")," fetch_txn_author_agreement()"),(0,n.kt)("p",null,"Fetch the current AML and TAA from the ledger."),(0,n.kt)("h4",{id:"async-get_all_endpoints_for_diddid-str"},(0,n.kt)("em",{parentName:"h4"},"async")," get_all_endpoints_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Fetch all endpoints for a ledger DID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The DID to look up on the ledger or in the cache"))),(0,n.kt)("h4",{id:"async-get_credential_definitioncredential_definition_id-str"},(0,n.kt)("em",{parentName:"h4"},"async")," get_credential_definition(credential_definition_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get a credential definition from the cache if available, otherwise the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"credential_definition_id")," \u2013 The schema id of the schema to fetch cred def for"))),(0,n.kt)("h4",{id:"async-get_endpoint_for_diddid-str-endpoint_type-optionalendpointtype--none"},(0,n.kt)("em",{parentName:"h4"},"async")," get_endpoint_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endpoint_type: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[EndpointType]"," = None)"),(0,n.kt)("p",null,"Fetch the endpoint for a ledger DID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The DID to look up on the ledger or in the cache")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"endpoint_type")," \u2013 The type of the endpoint. If none given, returns all"))))),(0,n.kt)("h4",{id:"async-get_indy_storage"},(0,n.kt)("em",{parentName:"h4"},"async")," get_indy_storage()"),(0,n.kt)("p",null,"Get an IndySdkStorage instance for the current wallet."),(0,n.kt)("h4",{id:"async-get_key_for_diddid-str"},(0,n.kt)("em",{parentName:"h4"},"async")," get_key_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Fetch the verkey for a ledger DID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The DID to look up on the ledger or in the cache"))),(0,n.kt)("h4",{id:"async-get_latest_txn_author_acceptance"},(0,n.kt)("em",{parentName:"h4"},"async")," get_latest_txn_author_acceptance()"),(0,n.kt)("p",null,"Look up the latest TAA acceptance."),(0,n.kt)("h4",{id:"async-get_nym_roledid-str"},(0,n.kt)("em",{parentName:"h4"},"async")," get_nym_role(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Return the role of the input public DID\u2019s NYM on the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 DID to query for role on the ledger."))),(0,n.kt)("h4",{id:"async-get_revoc_reg_defrevoc_reg_id-str"},(0,n.kt)("em",{parentName:"h4"},"async")," get_revoc_reg_def(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get revocation registry definition by ID; augment with ledger timestamp."),(0,n.kt)("h4",{id:"async-get_revoc_reg_deltarevoc_reg_id-str-fro0-tonone"},(0,n.kt)("em",{parentName:"h4"},"async")," get_revoc_reg_delta(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", fro=0, to=None)"),(0,n.kt)("p",null,"Look up a revocation registry delta by ID."),(0,n.kt)("p",null,":param revoc_reg_id revocation registry id\n:param fro earliest EPOCH time of interest\n:param to latest EPOCH time of interest"),(0,n.kt)("p",null,":returns delta response, delta timestamp"),(0,n.kt)("h4",{id:"async-get_revoc_reg_entryrevoc_reg_id-str-timestamp-int"},(0,n.kt)("em",{parentName:"h4"},"async")," get_revoc_reg_entry(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", timestamp: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#int"},"int"),")"),(0,n.kt)("p",null,"Get revocation registry entry by revocation registry ID and timestamp."),(0,n.kt)("h4",{id:"async-get_schemaschema_id-str"},(0,n.kt)("em",{parentName:"h4"},"async")," get_schema(schema_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get a schema from the cache if available, otherwise fetch from the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"schema_id")," \u2013 The schema id (or stringified sequence number) to retrieve"))),(0,n.kt)("h4",{id:"async-get_txn_author_agreementreload-bool--false"},(0,n.kt)("em",{parentName:"h4"},"async")," get_txn_author_agreement(reload: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = False)"),(0,n.kt)("p",null,"Get the current transaction author agreement, fetching it if necessary."),(0,n.kt)("h4",{id:"async-get_wallet_public_did"},(0,n.kt)("em",{parentName:"h4"},"async")," get_wallet_public_did()"),(0,n.kt)("p",null,"Fetch the public DID from the wallet."),(0,n.kt)("h4",{id:"async-is_ledger_read_only"},(0,n.kt)("em",{parentName:"h4"},"async")," is_ledger_read_only()"),(0,n.kt)("p",null,"Check if ledger is read-only including TAA."),(0,n.kt)("h4",{id:"nym_to_didnym-str"},"nym_to_did(nym: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Format a nym with the ledger\u2019s DID prefix."),(0,n.kt)("h4",{id:"property-pool_handle"},(0,n.kt)("em",{parentName:"h4"},"property")," pool_handle()"),(0,n.kt)("p",null,"Accessor for the ledger pool handle."),(0,n.kt)("h4",{id:"property-poolname-str"},(0,n.kt)("em",{parentName:"h4"},"property")," pool",(0,n.kt)("em",{parentName:"h4"},"name("),": ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str_"},"str")),(0,n.kt)("p",null,"Accessor for the ledger pool name."),(0,n.kt)("h4",{id:"property-readonly-bool"},(0,n.kt)("em",{parentName:"h4"},"property")," read",(0,n.kt)("em",{parentName:"h4"},"only("),": ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool_"},"bool")),(0,n.kt)("p",null,"Accessor for the ledger read-only flag."),(0,n.kt)("h4",{id:"async-register_nymdid-str-verkey-str-alias-optionalstr--none-role-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none"},(0,n.kt)("em",{parentName:"h4"},"async")," register_nym(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", verkey: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", alias: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, role: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Register a nym on the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 DID to register on the ledger.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"verkey")," \u2013 The verification key of the keypair.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"alias")," \u2013 Human-friendly alias to assign to the DID.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"role")," \u2013 For permissioned ledgers, what role should the new DID have."))))),(0,n.kt)("h4",{id:"async-rotate_public_did_keypairnext_seed-optionalstr--none"},(0,n.kt)("em",{parentName:"h4"},"async")," rotate_public_did_keypair(next_seed: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Rotate keypair for public DID: create new key, submit to ledger, update wallet."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"next_seed")," \u2013 seed for incoming ed25519 keypair (default random)"))),(0,n.kt)("h4",{id:"async-send_revoc_reg_defrevoc_reg_def-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none"},(0,n.kt)("em",{parentName:"h4"},"async")," send_revoc_reg_def(revoc_reg_def: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),", issuer_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Publish a revocation registry definition to the ledger."),(0,n.kt)("h4",{id:"async-send_revoc_reg_entryrevoc_reg_id-str-revoc_def_type-str-revoc_reg_entry-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none"},(0,n.kt)("em",{parentName:"h4"},"async")," send_revoc_reg_entry(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", revoc_def_type: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", revoc_reg_entry: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),", issuer_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Publish a revocation registry entry to the ledger."),(0,n.kt)("h4",{id:"async-submit_get_nym_requestrequest_json-str"},(0,n.kt)("em",{parentName:"h4"},"async")," submit_get_nym_request(request_json: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Submit GET_NYM request to ledger and return response_json."),(0,n.kt)("h4",{id:"taa_rough_timestamp"},"taa_rough_timestamp()"),(0,n.kt)("p",null,"Get a timestamp accurate to the day."),(0,n.kt)("p",null,"Anything more accurate is a privacy concern."),(0,n.kt)("h4",{id:"async-txn_endorserequest_json-str-endorse_did-optionaldidinfo--none"},(0,n.kt)("em",{parentName:"h4"},"async")," txn_endorse(request_json: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endorse_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"/aries-acapy-docs/code/generated/aries_cloudagent.wallet#aries_cloudagent.wallet.did_info.DIDInfo"},"DIDInfo"),"] = None)"),(0,n.kt)("p",null,"Endorse a (signed) ledger transaction."),(0,n.kt)("h4",{id:"async-update_endpoint_for_diddid-str-endpoint-str-endpoint_type-optionalendpointtype--none-write_ledger-bool--true-endorser_did-optionalstr--none-routing_keys-optionalliststr--none"},(0,n.kt)("em",{parentName:"h4"},"async")," update_endpoint_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endpoint: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endpoint_type: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[EndpointType]"," = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, routing_keys: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"]] = None)"),(0,n.kt)("p",null,"Check and update the endpoint on the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The ledger DID")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"endpoint")," \u2013 The endpoint address")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"endpoint_type")," \u2013 The type of the endpoint"))))),(0,n.kt)("h3",{id:"class-aries_cloudagentledgerindyindysdkledgerpoolname-str--checked-bool--false-keepalive-int--0-cache-optionalbasecache--none-cache_duration-int--600-genesis_transactions-optionalstr--none-read_only-bool--false-socks_proxy-optionalstr--none"},(0,n.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.ledger.indy.IndySdkLedgerPool(name: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", ","*",", checked: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = False, keepalive: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#int"},"int")," = 0, cache: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"/aries-acapy-docs/code/generated/aries_cloudagent.cache#aries_cloudagent.cache.base.BaseCache"},"BaseCache"),"] = None, cache_duration: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#int"},"int")," = 600, genesis_transactions: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, read_only: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = False, socks_proxy: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/functions.html#object"},(0,n.kt)("inlineCode",{parentName:"a"},"object"))),(0,n.kt)("p",null,"Indy ledger manager class."),(0,n.kt)("h4",{id:"async-check_pool_config"},(0,n.kt)("em",{parentName:"h4"},"async")," check_pool_config()"),(0,n.kt)("p",null,"Check if a pool config has been created."),(0,n.kt)("h4",{id:"async-close"},(0,n.kt)("em",{parentName:"h4"},"async")," close()"),(0,n.kt)("p",null,"Close the pool ledger."),(0,n.kt)("h4",{id:"async-context_close"},(0,n.kt)("em",{parentName:"h4"},"async")," context_close()"),(0,n.kt)("p",null,"Release the reference and schedule closing of the pool ledger."),(0,n.kt)("h4",{id:"async-context_open"},(0,n.kt)("em",{parentName:"h4"},"async")," context_open()"),(0,n.kt)("p",null,"Open the ledger if necessary and increase the number of active references."),(0,n.kt)("h4",{id:"async-create_pool_configgenesis_transactions-str-recreate-bool--false"},(0,n.kt)("em",{parentName:"h4"},"async")," create_pool_config(genesis_transactions: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", recreate: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = False)"),(0,n.kt)("p",null,"Create the pool ledger configuration."),(0,n.kt)("h4",{id:"property-genesistxns-str"},(0,n.kt)("em",{parentName:"h4"},"property")," genesis",(0,n.kt)("em",{parentName:"h4"},"txns("),": ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str_"},"str")),(0,n.kt)("p",null,"Get the configured genesis transactions."),(0,n.kt)("h4",{id:"async-open"},(0,n.kt)("em",{parentName:"h4"},"async")," open()"),(0,n.kt)("p",null,"Open the pool ledger, creating it if necessary."),(0,n.kt)("h3",{id:"class-aries_cloudagentledgerindyindysdkledgerpoolprovider"},(0,n.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.ledger.indy.IndySdkLedgerPoolProvider()"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("a",{parentName:"p",href:"/aries-acapy-docs/code/generated/aries_cloudagent.config#aries_cloudagent.config.base.BaseProvider"},(0,n.kt)("inlineCode",{parentName:"a"},"BaseProvider"))),(0,n.kt)("p",null,"Indy ledger pool provider which keys off the selected pool name."),(0,n.kt)("h4",{id:"providesettings-basesettings-injector-baseinjector"},"provide(settings: ",(0,n.kt)("a",{parentName:"h4",href:"/aries-acapy-docs/code/generated/aries_cloudagent.config#aries_cloudagent.config.base.BaseSettings"},"BaseSettings"),", injector: ",(0,n.kt)("a",{parentName:"h4",href:"/aries-acapy-docs/code/generated/aries_cloudagent.config#aries_cloudagent.config.base.BaseInjector"},"BaseInjector"),")"),(0,n.kt)("p",null,"Create and open the pool instance."),(0,n.kt)("h2",{id:"aries_cloudagentledgerindy_vdr-module"},"aries_cloudagent.ledger.indy_vdr module"),(0,n.kt)("p",null,"Indy-VDR ledger implementation."),(0,n.kt)("h3",{id:"class-aries_cloudagentledgerindy_vdrindyvdrledgerpool-indyvdrledgerpool-profile-profile"},(0,n.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.ledger.indy_vdr.IndyVdrLedger(pool: IndyVdrLedgerPool, profile: ",(0,n.kt)("a",{parentName:"h3",href:"/aries-acapy-docs/code/generated/aries_cloudagent.core#aries_cloudagent.core.profile.Profile"},"Profile"),")"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("inlineCode",{parentName:"p"},"BaseLedger")),(0,n.kt)("p",null,"Indy-VDR ledger class."),(0,n.kt)("h4",{id:"backendname-strhttpsdocspythonorg3librarystdtypeshtmlstr_---indy-vdr-"},"BACKEND",(0,n.kt)("em",{parentName:"h4"},"NAME("),": ","[str]","(",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"https://docs.python.org/3/library/stdtypes.html#str"),"_ ",(0,n.kt)("em",{parentName:"h4"}," = 'indy-vdr")," )"),(0,n.kt)("h4",{id:"async-accept_txn_author_agreementtaa_record-dict-mechanism-str-accept_time-optionalint--none-1"},(0,n.kt)("em",{parentName:"h4"},"async")," accept_txn_author_agreement(taa_record: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),", mechanism: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", accept_time: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#int"},"int"),"] = None)"),(0,n.kt)("p",null,"Save a new record recording the acceptance of the TAA."),(0,n.kt)("h4",{id:"async-build_and_return_get_nym_requestsubmitter_did-optionalstr-target_did-str-1"},(0,n.kt)("em",{parentName:"h4"},"async")," build_and_return_get_nym_request(submitter_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"], target_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Build GET_NYM request and return request_json."),(0,n.kt)("h4",{id:"async-credential_definition_id2schema_idcredential_definition_id-1"},(0,n.kt)("em",{parentName:"h4"},"async")," credential_definition_id2schema_id(credential_definition_id)"),(0,n.kt)("p",null,"From a credential definition, get the identifier for its schema."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"credential_definition_id")," \u2013 The identifier of the credential definition\nfrom which to identify a schema"))),(0,n.kt)("h4",{id:"async-fetch_credential_definitioncredential_definition_id-str-1"},(0,n.kt)("em",{parentName:"h4"},"async")," fetch_credential_definition(credential_definition_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get a credential definition from the ledger by id."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"credential_definition_id")," \u2013 The cred def id of the cred def to fetch"))),(0,n.kt)("h4",{id:"async-fetch_schema_by_idschema_id-str-1"},(0,n.kt)("em",{parentName:"h4"},"async")," fetch_schema_by_id(schema_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get schema from ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"schema_id")," \u2013 The schema id (or stringified sequence number) to retrieve")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("p",{parentName:"li"},"Indy schema dict"))),(0,n.kt)("h4",{id:"async-fetch_schema_by_seq_noseq_no-int-1"},(0,n.kt)("em",{parentName:"h4"},"async")," fetch_schema_by_seq_no(seq_no: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#int"},"int"),")"),(0,n.kt)("p",null,"Fetch a schema by its sequence number."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"seq_no")," \u2013 schema ledger sequence number")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Returns")),(0,n.kt)("p",{parentName:"li"},"Indy schema dict"))),(0,n.kt)("h4",{id:"async-fetch_txn_author_agreement-1"},(0,n.kt)("em",{parentName:"h4"},"async")," fetch_txn_author_agreement()"),(0,n.kt)("p",null,"Fetch the current AML and TAA from the ledger."),(0,n.kt)("h4",{id:"async-get_all_endpoints_for_diddid-str-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_all_endpoints_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Fetch all endpoints for a ledger DID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The DID to look up on the ledger or in the cache"))),(0,n.kt)("h4",{id:"async-get_credential_definitioncredential_definition_id-str-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_credential_definition(credential_definition_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get a credential definition from the cache if available, otherwise the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"credential_definition_id")," \u2013 The schema id of the schema to fetch cred def for"))),(0,n.kt)("h4",{id:"async-get_endpoint_for_diddid-str-endpoint_type-optionalendpointtype--none-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_endpoint_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endpoint_type: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[EndpointType]"," = None)"),(0,n.kt)("p",null,"Fetch the endpoint for a ledger DID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The DID to look up on the ledger or in the cache")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"endpoint_type")," \u2013 The type of the endpoint. If none given, returns all"))))),(0,n.kt)("h4",{id:"async-get_key_for_diddid-str-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_key_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Fetch the verkey for a ledger DID."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The DID to look up on the ledger or in the cache"))),(0,n.kt)("h4",{id:"async-get_latest_txn_author_acceptance-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_latest_txn_author_acceptance()"),(0,n.kt)("p",null,"Look up the latest TAA acceptance."),(0,n.kt)("h4",{id:"async-get_nym_roledid-str-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_nym_role(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Return the role of the input public DID\u2019s NYM on the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 DID to query for role on the ledger."))),(0,n.kt)("h4",{id:"async-get_revoc_reg_defrevoc_reg_id-str-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_revoc_reg_def(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get revocation registry definition by ID."),(0,n.kt)("h4",{id:"async-get_revoc_reg_deltarevoc_reg_id-str-timestamp_from0-timestamp_tonone"},(0,n.kt)("em",{parentName:"h4"},"async")," get_revoc_reg_delta(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", timestamp_from=0, timestamp_to=None)"),(0,n.kt)("p",null,"Look up a revocation registry delta by ID."),(0,n.kt)("p",null,":param revoc_reg_id revocation registry id\n:param timestamp_from from time. a total number of seconds from Unix Epoch\n:param timestamp_to to time. a total number of seconds from Unix Epoch"),(0,n.kt)("p",null,":returns delta response, delta timestamp"),(0,n.kt)("h4",{id:"async-get_revoc_reg_entryrevoc_reg_id-str-timestamp-int-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_revoc_reg_entry(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", timestamp: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#int"},"int"),")"),(0,n.kt)("p",null,"Get revocation registry entry by revocation registry ID and timestamp."),(0,n.kt)("h4",{id:"async-get_schemaschema_id-str-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_schema(schema_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Get a schema from the cache if available, otherwise fetch from the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"schema_id")," \u2013 The schema id (or stringified sequence number) to retrieve"))),(0,n.kt)("h4",{id:"async-get_txn_author_agreementreload-bool--false-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_txn_author_agreement(reload: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = False)"),(0,n.kt)("p",null,"Get the current transaction author agreement, fetching it if necessary."),(0,n.kt)("h4",{id:"async-get_wallet_public_did-1"},(0,n.kt)("em",{parentName:"h4"},"async")," get_wallet_public_did()"),(0,n.kt)("p",null,"Fetch the public DID from the wallet."),(0,n.kt)("h4",{id:"async-is_ledger_read_only-1"},(0,n.kt)("em",{parentName:"h4"},"async")," is_ledger_read_only()"),(0,n.kt)("p",null,"Check if ledger is read-only including TAA."),(0,n.kt)("h4",{id:"nym_to_didnym-str-1"},"nym_to_did(nym: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Format a nym with the ledger\u2019s DID prefix."),(0,n.kt)("h4",{id:"property-pool_handle-1"},(0,n.kt)("em",{parentName:"h4"},"property")," pool_handle()"),(0,n.kt)("p",null,"Accessor for the ledger pool handle."),(0,n.kt)("h4",{id:"property-poolname-str-1"},(0,n.kt)("em",{parentName:"h4"},"property")," pool",(0,n.kt)("em",{parentName:"h4"},"name("),": ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str_"},"str")),(0,n.kt)("p",null,"Accessor for the ledger pool name."),(0,n.kt)("h4",{id:"property-readonly-bool-1"},(0,n.kt)("em",{parentName:"h4"},"property")," read",(0,n.kt)("em",{parentName:"h4"},"only("),": ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool_"},"bool")),(0,n.kt)("p",null,"Accessor for the ledger read-only flag."),(0,n.kt)("h4",{id:"async-register_nymdid-str-verkey-str-alias-optionalstr--none-role-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none-1"},(0,n.kt)("em",{parentName:"h4"},"async")," register_nym(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", verkey: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", alias: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, role: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Register a nym on the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 DID to register on the ledger.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"verkey")," \u2013 The verification key of the keypair.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"alias")," \u2013 Human-friendly alias to assign to the DID.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"role")," \u2013 For permissioned ledgers, what role should the new DID have."))))),(0,n.kt)("h4",{id:"async-rotate_public_did_keypairnext_seed-optionalstr--none-1"},(0,n.kt)("em",{parentName:"h4"},"async")," rotate_public_did_keypair(next_seed: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Rotate keypair for public DID: create new key, submit to ledger, update wallet."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"next_seed")," \u2013 seed for incoming ed25519 keypair (default random)"))),(0,n.kt)("h4",{id:"async-send_revoc_reg_defrevoc_reg_def-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none-1"},(0,n.kt)("em",{parentName:"h4"},"async")," send_revoc_reg_def(revoc_reg_def: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),", issuer_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Publish a revocation registry definition to the ledger."),(0,n.kt)("h4",{id:"async-send_revoc_reg_entryrevoc_reg_id-str-revoc_def_type-str-revoc_reg_entry-dict-issuer_did-optionalstr--none-write_ledger-bool--true-endorser_did-optionalstr--none-1"},(0,n.kt)("em",{parentName:"h4"},"async")," send_revoc_reg_entry(revoc_reg_id: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", revoc_def_type: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", revoc_reg_entry: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),", issuer_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Publish a revocation registry entry to the ledger."),(0,n.kt)("h4",{id:"async-submit_get_nym_requestrequest_json-str-1"},(0,n.kt)("em",{parentName:"h4"},"async")," submit_get_nym_request(request_json: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),")"),(0,n.kt)("p",null,"Submit GET_NYM request to ledger and return response_json."),(0,n.kt)("h4",{id:"taa_rough_timestamp-1"},"taa_rough_timestamp()"),(0,n.kt)("p",null,"Get a timestamp accurate to the day."),(0,n.kt)("p",null,"Anything more accurate is a privacy concern."),(0,n.kt)("h4",{id:"async-txn_endorserequest_json-str-endorse_did-optionaldidinfo--none-1"},(0,n.kt)("em",{parentName:"h4"},"async")," txn_endorse(request_json: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endorse_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"/aries-acapy-docs/code/generated/aries_cloudagent.wallet#aries_cloudagent.wallet.did_info.DIDInfo"},"DIDInfo"),"] = None)"),(0,n.kt)("p",null,"Endorse (sign) the provided transaction."),(0,n.kt)("h4",{id:"async-update_endpoint_for_diddid-str-endpoint-str-endpoint_type-optionalendpointtype--none-write_ledger-bool--true-endorser_did-optionalstr--none-routing_keys-optionalliststr--none-1"},(0,n.kt)("em",{parentName:"h4"},"async")," update_endpoint_for_did(did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endpoint: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", endpoint_type: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[EndpointType]"," = None, write_ledger: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = True, endorser_did: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, routing_keys: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/typing.html#typing.List"},"List"),"[",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"]] = None)"),(0,n.kt)("p",null,"Check and update the endpoint on the ledger."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"did")," \u2013 The ledger DID")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"endpoint")," \u2013 The endpoint address")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"endpoint_type")," \u2013 The type of the endpoint"))))),(0,n.kt)("h3",{id:"class-aries_cloudagentledgerindy_vdrindyvdrledgerpoolname-str--keepalive-int--0-cache-optionalbasecache--none-cache_duration-int--600-genesis_transactions-optionalstr--none-read_only-bool--false-socks_proxy-optionalstr--none"},(0,n.kt)("em",{parentName:"h3"},"class")," aries_cloudagent.ledger.indy_vdr.IndyVdrLedgerPool(name: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", ","*",", keepalive: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#int"},"int")," = 0, cache: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"/aries-acapy-docs/code/generated/aries_cloudagent.cache#aries_cloudagent.cache.base.BaseCache"},"BaseCache"),"] = None, cache_duration: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#int"},"int")," = 600, genesis_transactions: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None, read_only: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = False, socks_proxy: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/typing.html#typing.Optional"},"Optional"),"[",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),"] = None)"),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/functions.html#object"},(0,n.kt)("inlineCode",{parentName:"a"},"object"))),(0,n.kt)("p",null,"Indy-VDR ledger pool manager."),(0,n.kt)("h4",{id:"property-cfgpath-path"},(0,n.kt)("em",{parentName:"h4"},"property")," cfg",(0,n.kt)("em",{parentName:"h4"},"path("),": ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/pathlib.html#pathlib.Path_"},"Path")),(0,n.kt)("p",null,"Get the path to the configuration file, ensuring it\u2019s created."),(0,n.kt)("h4",{id:"async-close-1"},(0,n.kt)("em",{parentName:"h4"},"async")," close()"),(0,n.kt)("p",null,"Close the pool ledger."),(0,n.kt)("h4",{id:"async-context_close-1"},(0,n.kt)("em",{parentName:"h4"},"async")," context_close()"),(0,n.kt)("p",null,"Release the reference and schedule closing of the pool ledger."),(0,n.kt)("h4",{id:"async-context_open-1"},(0,n.kt)("em",{parentName:"h4"},"async")," context_open()"),(0,n.kt)("p",null,"Open the ledger if necessary and increase the number of active references."),(0,n.kt)("h4",{id:"async-create_pool_configgenesis_transactions-str-recreate-bool--false-1"},(0,n.kt)("em",{parentName:"h4"},"async")," create_pool_config(genesis_transactions: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", recreate: ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/functions.html#bool"},"bool")," = False)"),(0,n.kt)("p",null,"Create the pool ledger configuration."),(0,n.kt)("h4",{id:"property-genesishash-str"},(0,n.kt)("em",{parentName:"h4"},"property")," genesis",(0,n.kt)("em",{parentName:"h4"},"hash("),": ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str_"},"str")),(0,n.kt)("p",null,"Get the hash of the configured genesis transactions."),(0,n.kt)("h4",{id:"property-genesistxns-str-1"},(0,n.kt)("em",{parentName:"h4"},"property")," genesis",(0,n.kt)("em",{parentName:"h4"},"txns("),": ",(0,n.kt)("a",{parentName:"h4",href:"https://docs.python.org/3/library/stdtypes.html#str_"},"str")),(0,n.kt)("p",null,"Get the configured genesis transactions."),(0,n.kt)("h4",{id:"async-open-1"},(0,n.kt)("em",{parentName:"h4"},"async")," open()"),(0,n.kt)("p",null,"Open the pool ledger, creating it if necessary."),(0,n.kt)("h2",{id:"aries_cloudagentledgerroutes-module"},"aries_cloudagent.ledger.routes module"),(0,n.kt)("h2",{id:"aries_cloudagentledgerutil-module"},"aries_cloudagent.ledger.util module"),(0,n.kt)("p",null,"Ledger utilities."),(0,n.kt)("h3",{id:"async-aries_cloudagentledgerutilnotify_register_did_eventprofile-profile-did-str-meta_data-dict"},(0,n.kt)("em",{parentName:"h3"},"async")," aries_cloudagent.ledger.util.notify_register_did_event(profile: ",(0,n.kt)("a",{parentName:"h3",href:"/aries-acapy-docs/code/generated/aries_cloudagent.core#aries_cloudagent.core.profile.Profile"},"Profile"),", did: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#str"},"str"),", meta_data: ",(0,n.kt)("a",{parentName:"h3",href:"https://docs.python.org/3/library/stdtypes.html#dict"},"dict"),")"),(0,n.kt)("p",null,"Send notification for a DID post-process event."))}c.isMDXComponent=!0}}]);